{"version":3,"sources":["assets/images/Trollface.png","components/Header/Header.tsx","components/TextMove/Footer/Footer.tsx","components/Loading/Loading.tsx","assets/images/rand.jpeg","components/SearchBar/Searchbar.tsx","services/BlockScroll/UseScrollBlock.ts","components/TextMove/TextMove.tsx","components/DragUpDown/DragUpDown.tsx","components/DragUpDown/ArrowsUpDown.tsx","components/DragDropImg/DragDropImg.tsx","sites/MemeGenerator/MemeGenerator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","src","problem","alt","Footer","className","override","css","Loading","isLoading","useState","loading","setLoading","useEffect","color","size","Searchbar","getData","setData","items","setItems","placeholder","onSelect","item","autoFocus","formatResult","styling","safeDocument","document","useScrollBlock","scrollBlocked","useRef","html","documentElement","body","style","current","undefined","scrollBarWidth","window","innerWidth","clientWidth","bodyPaddingRight","parseInt","getComputedStyle","getPropertyValue","position","overflow","paddingRight","TextMove","previousTouch","inputText","startPosition","pressed","setPressed","x","y","setPosition","ref","text","setText","blockScroll","allowScroll","minus","offset","clientHeight","transform","onMouseMove","event","movementX","movementY","touch","touches","pageX","pageY","onTouchStart","onTouchEnd","onTouchMove","onMouseDown","onMouseUp","onMouseLeave","DragUpDown","getX","getY","offsetY","setY","setX","console","log","boxStyle","width","height","ArrowsUpDown","arrowDrive","DragDropImg","loadImg","type","onChange","e","URL","createObjectURL","target","files","MemeGenerator","topText","setTopText","bottomText","setBottomText","randomImage","setRandomImage","allMemeImgs","setAllMemeImgs","parentX","setparentX","parentY","setparentY","blackSize","setBlackSize","fetch","then","response","json","memes","data","map","box_count","id","Number","name","url","setTimeout","clearInterval","marginLeft","marginRight","onSubmit","preventDefault","domtoimage","toJpeg","getElementById","quality","dataUrl","link","createElement","download","href","click","value","Button","variant","el","setInterval","getBoundingClientRect","checkParentSize","display","logo","getImg","App","maxWidth","margin","marginTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5f2c0066.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Trollface.c371feba.png\";","import React from 'react';\nimport problem from './../../assets/images/Trollface.png';\n\nexport type IHeaderProps = {\n\n}\n\nconst Header: React.FC<IHeaderProps> = () => {\n    return (\n        <header>\n            <img src={problem} alt=\"Problem?\" /> \n            <p>Meme Generator</p>\n            <small> Beni Â©</small>\n        </header>\n    );\n}\n\nexport { Header };","import React from 'react';\nimport './FooterStyle.css';\n\nexport type IFooterProps = {\n    \n}\n\nconst Footer: React.FC<IFooterProps> = () => {\n    return (\n        <div className=\"footerHolder\">\n            \n        </div>\n    );\n}\n\nexport { Footer };","import React, { useEffect, useState } from 'react';\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\nimport { css } from \"@emotion/react\";\nimport './LoadingStyle.css';\n\nexport type ILoadingProps = {\nisLoading:boolean;\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  box-shadow: rgb(255 255 255 / 20%) 0px 3px 29px 0px;\n`;\n\nconst Loading: React.FC<ILoadingProps> = ({isLoading }) => {\n\n    const [loading, setLoading] = useState(isLoading);\n\n    useEffect(() => {\n        setLoading(isLoading)\n    }, [isLoading]);\n\n    //let [color, setColor] = useState(\"yellow\");\n\n    return (\n        <div className=\"sweet-loading\">\n            {/*   <button onClick={() => setLoading(!loading)}>Toggle Loader</button>\n            <input value={color} onChange={(input) => setColor(input.target.value)} placeholder=\"Color of the loader\" /> */}\n\n            <PacmanLoader color={\"yellow\"} loading={loading} css={override}  size={100} />\n        </div>\n    );\n}\n\nexport { Loading };","export default __webpack_public_path__ + \"static/media/rand.0757221b.jpeg\";","import React, { useEffect, useState } from 'react';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\nimport './SearchStyle.css'\n\nexport type ISearchbarProps = {\n    getData: any;\n    setData: (string) => void;\n}\n\nconst Searchbar: React.FC<ISearchbarProps> = ({ getData, setData }) => {\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        setItems(getData);\n    }, [getData]);\n\n\n    /*     const handleOnSearch = (string, results) => {\n            // onSearch will have as the first callback parameter\n            // the string searched and for the second the results.\n        } */\n\n    /* const handleOnHover = (result) => {\n        // the item hovered\n    } */\n\n    const handleOnSelect = (item) => {\n        // the item selected\n        setData(item);\n    }\n\n    /* const handleOnFocus = () => {\n        // console.log('Focused')\n    } */\n\n    const formatResult = (item) => {\n        return item;\n        // return (<p dangerouslySetInnerHTML={{__html: '<strong>'+item+'</strong>'}}></p>); //To format result as html\n    }\n\n\n    return (\n        <div>\n            {/* \n             onSearch={handleOnSearch}\n             onHover={handleOnHover}\n               onFocus={handleOnFocus}\n            */}\n            <ReactSearchAutocomplete\n                placeholder=\"Search\"\n                items={items}\n\n                onSelect={handleOnSelect}\n\n                autoFocus\n                formatResult={formatResult}\n                styling={\n                    {\n                        \"lineColor\": \"#48EDDD\",\n                        \"iconColor\": \"#48EDDD\",\n                        \"borderRadius\": \"4px\",\n                        \"boxShadow\": \"none\",\n                        \"zIndex\": \"4\",\n                        \"fontSize\": \"x-large\",\n                        \"fontFamily\": \"VT323, monospace\"\n                    }\n                }\n            />\n        </div>\n    );\n}\n\nexport { Searchbar };","import { useRef } from 'react';\n\nconst safeDocument: Document = document;\n\n/**\n * Usage:\n * const [blockScroll, allowScroll] = useScrollBlock();\n */\nexport const useScrollBlock = (): [() => void, () => void] => {\n\tconst scrollBlocked = useRef(false);\n\tconst html = safeDocument.documentElement;\n\tconst { body } = safeDocument;\n\n\tconst blockScroll = (): void => {\n\t\tif (!body || !body.style || scrollBlocked.current) \n            return;\n        if (document === undefined)\n            return;\n\n\t\tconst scrollBarWidth = window.innerWidth - html.clientWidth;\n\t\tconst bodyPaddingRight = parseInt(window.getComputedStyle(body).getPropertyValue('padding-right')) || 0;\n\n\t\t/**\n\t\t * 1. Fixes a bug in iOS and desktop Safari whereby setting\n\t\t *    `overflow: hidden` on the html/body does not prevent scrolling.\n\t\t * 2. Fixes a bug in desktop Safari where `overflowY` does not prevent\n\t\t *    scroll if an `overflow-x` style is also applied to the body.\n\t\t */\n\t\thtml.style.position = 'relative'; /* [1] */\n\t\thtml.style.overflow = 'hidden'; /* [2] */\n\t\tbody.style.position = 'relative'; /* [1] */\n\t\tbody.style.overflow = 'hidden'; /* [2] */\n\t\tbody.style.paddingRight = `${bodyPaddingRight + scrollBarWidth}px`;\n\n\t\tscrollBlocked.current = true;\n\t};\n\n\tconst allowScroll = (): void => {\n\t\tif (!body || !body.style || !scrollBlocked.current) return;\n\n\t\thtml.style.position = '';\n\t\thtml.style.overflow = '';\n\t\tbody.style.position = '';\n\t\tbody.style.overflow = '';\n\t\tbody.style.paddingRight = '';\n\n\t\tscrollBlocked.current = false;\n\t};\n\n\treturn [blockScroll, allowScroll];\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport './TextMoveStyle.css';\nimport { useScrollBlock } from './../../services/BlockScroll/UseScrollBlock';\n\n\ninterface IPos {\n    x: number;\n    y: number;\n}\n\nexport type ITextMoveProps = {\n    inputText: string;\n    startPosition: IPos;\n}\n\n\nconst TextMove: React.FC<ITextMoveProps> = ({ inputText, startPosition }) => {\n\n    const [pressed, setPressed] = useState(false);\n    const [position, setPosition] = useState({ x: 0, y: 0 });\n    const ref = useRef() as any;\n    const [text, setText] = useState(\"Write...\");\n\n    const [blockScroll, allowScroll] = useScrollBlock();\n\n    useEffect(() => {\n        let minus=0;\n        let offset=0;\n        if(startPosition.y>0){\n            offset=50;\n            minus=ref.current.clientHeight;\n        }\n        //set the position of the child in the center of the parent         \n        setPosition({\n            x: (startPosition.x - ref.current.clientWidth) / 2,\n            y: (startPosition.y+offset)-minus\n        });\n    }, [startPosition]);\n\n\n    // Monitor changes to position state and update DOM\n    useEffect(() => {\n        if (ref.current) {\n            ref.current.style.transform = `translate(${position.x}px, ${position.y}px)`\n        }\n    }, [position]);\n\n    useEffect(() => {\n        setText(inputText);\n    }, [inputText]);\n\n    let previousTouch;\n    const onMouseMove = (event) => {\n        if (pressed) {\n\n            switch (event.movementX !== undefined) {\n                case true:\n\n                    setPosition({\n                        x: position.x + event.movementX,\n                        y: position.y + event.movementY\n                    })\n                    break;\n                case false:\n                    var touch = event.touches[0];\n\n                    if (previousTouch) {\n                        event.movementX = touch.pageX - previousTouch.pageX;\n                        event.movementY = touch.pageY - previousTouch.pageY;\n\n                        setPosition({\n                            x: position.x + event.movementX,\n                            y: position.y + event.movementY\n                        })\n                    }\n\n                    previousTouch = touch;\n                    break;\n            }\n        }\n    }\n\n    return (\n        <div\n            className=\"inputTextHolder\"\n            ref={ref}\n            onTouchStart={() => { setPressed(true); blockScroll(); }}\n            onTouchEnd={() => { setPressed(false); allowScroll(); }}\n            onTouchMove={onMouseMove}\n\n            onMouseMove={onMouseMove}\n            onMouseDown={() => setPressed(true)}\n            onMouseUp={() => setPressed(false)}\n            onMouseLeave={() => setPressed(false)}\n        >\n            <h2 className=\"inputText\">{text}</h2>\n\n        </div>\n    );\n}\n\nexport { TextMove };","import React, { useEffect, useState } from 'react';\nimport './DragUpDownStyle.css';\n\nexport type IDragUpDownProps = {\n    getX: number;\n    getY:number;\n    offsetY:number;\n}\n\nconst DragUpDown: React.FC<IDragUpDownProps> = ({ getX , getY, offsetY}) => {\n\n    const [y, setY] = useState(0);\n    const [x, setX] = useState(0);\n\n    useEffect(() => {\n        console.log(getX);\n        \n        setX(getX);\n    }, [getX]);\n\n    useEffect(() => {\n        setY(getY);\n    }, [getY]);\n\n    useEffect(() => {\n        if(typeof(offsetY)===\"number\"&&offsetY>-10){\n            setY(y+offsetY);\n        }\n    }, [offsetY]); \n\n    const boxStyle = {\n        width: `${x}px`,\n        height: `${y}px`,\n    };\n\n    return (\n        <div\n            className=\"UpDownHolder\"\n            style={boxStyle}\n        >\n       \n        </div>\n    );\n}\n\nexport { DragUpDown };","import React, { useState } from 'react';\nimport { useScrollBlock } from '../../services/BlockScroll/UseScrollBlock';\nimport './DragUpDownStyle.css';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\n\nexport type IArrowsUpDownProps = {\n    arrowDrive:(e:number)=>void;\n}\n\nconst ArrowsUpDown: React.FC<IArrowsUpDownProps> = ({arrowDrive}) => {\n    const [blockScroll, allowScroll] = useScrollBlock();\n    const [pressed, setPressed] = useState(false);\n\n    let previousTouch;\n    const onMouseMove = (event) => {\n        if (pressed) {\n\n            switch (event.movementX !== undefined) {\n                case true:\n\n                    arrowDrive(event.movementY/1.5);\n                    \n                    break;\n                case false:\n                    var touch = event.touches[0];\n\n                    if (previousTouch) {\n                        event.movementY = touch.pageY - previousTouch.pageY;\n                        arrowDrive(event.movementY);\n                    }\n\n                    previousTouch = touch;\n                    break;\n            }\n        }\n    }\n    return (\n        <div\n            onTouchStart={() => { setPressed(true); blockScroll(); }}\n            onTouchEnd={() => { setPressed(false); allowScroll(); }}\n            onTouchMove={onMouseMove}\n\n            onMouseMove={onMouseMove}\n            onMouseDown={() => setPressed(true)}\n            onMouseUp={() => setPressed(false)}\n            onMouseLeave={() => setPressed(false)}\n            className=\"UpDownArrowHolder\"\n        >\n            <button className=\"UpDownArrow\" >\n            <ArrowUpwardIcon /><ArrowDownwardIcon />\n            </button>\n        </div>\n    );\n}\n\nexport { ArrowsUpDown };","import React from 'react';\nimport './DragDropStyle.css';\n\nexport type IDragDropImgProps = {\n    loadImg: (e:any) => void;\n}\n\nconst DragDropImg: React.FC<IDragDropImgProps> = ({loadImg}) => {\n\n\n    function handleInputImg(e: any) {\n        loadImg(URL.createObjectURL(e.target.files[0]));\n    }\n\n    return (\n        <div className=\"inputImgHolder\">\n            <label className=\"custom-file-upload\">\n            <input   type=\"file\" onChange={handleInputImg} />\n            <i className=\"inputImg\" ></i>\n            <i className=\"inputText\">Custom Upload</i> \n            </label>\n        </div> \n    );\n}\n\nexport { DragDropImg };","import React, { useEffect, useState } from 'react';\nimport './../../Styles/globstyle.css';\nimport domtoimage from 'dom-to-image';\nimport { Loading } from '../../components/Loading/Loading';\nimport logo from './../../assets/images/rand.jpeg';\nimport { Searchbar } from '../../components/SearchBar/Searchbar';\nimport { Button } from '@mui/material';\nimport { TextMove } from '../../components/TextMove/TextMove';\nimport { DragUpDown } from '../../components/DragUpDown/DragUpDown';\nimport { ArrowsUpDown } from '../../components/DragUpDown/ArrowsUpDown';\nimport { DragDropImg } from '../../components/DragDropImg/DragDropImg';\nimport { ArrowUpDown } from '../../components/ArrowUpDown/ArrowUpDown';\n\nexport type IMemeGeneratorProps = {\n\n}\n\n\nconst MemeGenerator: React.FC<IMemeGeneratorProps> = () => {\n    const [topText, setTopText] = useState(\"\");\n    const [bottomText, setBottomText] = useState(\"\");\n    const [randomImage, setRandomImage] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [allMemeImgs, setAllMemeImgs] = useState([]);\n    const [parentX, setparentX] = useState(0);\n    const [parentY, setparentY] = useState(0);\n    const [blackSize, setBlackSize] = useState(0);\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(response => response.json())\n            .then(response => {\n                let memes = [];\n                memes = response.data.memes.map((data: any) => {\n                    return {\n                        box_count: data.box_count,\n                        height: data.height,\n                        id: Number(data.id),\n                        name: data.name,\n                        url: data.url,\n                        width: data.width\n                    }\n                })\n                setAllMemeImgs(memes);\n                setTimeout(() => {\n                    setLoading(false);\n                }, 1000);\n            })\n    }, []);\n\n    useEffect(() => {\n        return () => clearInterval();\n    });\n\n    const handleSubmit = (e: any) => {\n        e.preventDefault();\n        domtoimage.toJpeg(document.getElementById('memeForm') as HTMLElement, { quality: 1 })\n            .then((dataUrl) => {\n                const link = document.createElement('a');\n                link.download = 'beniMeme.jpeg';\n                link.href = dataUrl;\n                link.click();\n            });\n    }\n\n    function getSearch(event) {\n        setRandomImage(event.url)\n    }\n\n    function arrowMoved(e: number) {\n        setBlackSize(e);\n    }\n\n    function checkParentSize(el) {\n        if (!el) return;\n        setInterval(() => {\n            setparentX(el.getBoundingClientRect().width);\n            setparentY(el.getBoundingClientRect().height - 50);\n        }, 400);\n    }\n\n    function handleInputImg(getImg:string){\n        setRandomImage(getImg);\n    }\n\n\n    return (\n        <div style={{ marginLeft: \"10px\", marginRight: \"10px\" }}>\n\n            <br />\n            <br />\n            <Searchbar getData={allMemeImgs} setData={getSearch} />\n            <br />\n\n            <form className=\"meme-form\" onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder=\"Top\" value={topText} onChange={e => setTopText(e.target.value)} />\n                <input type=\"text\" placeholder=\"Bottom\" value={bottomText} onChange={e => setBottomText(e.target.value)} />\n                <Button variant=\"contained\" type=\"submit\">Download</Button>\n            </form>\n\n            <br />\n            <br />\n\n            <div\n                ref={el => { checkParentSize(el) }}\n                className=\"meme\" id=\"memeForm\" >\n\n                <TextMove inputText={topText} startPosition={{ x: parentX, y: 0 }} />\n                <TextMove inputText={bottomText} startPosition={{ x: parentX, y: parentY }} />\n\n                <DragUpDown getX={Number(parentX)} getY={0} offsetY={Number(blackSize)} />\n\n                <img style={{ display: 'block' }} src={randomImage === \"\" ? logo : randomImage} alt=\"Meme\" />\n                <DragUpDown getX={Number(parentX)} getY={0} offsetY={Number(blackSize)} />\n\n            </div>\n\n            <ArrowsUpDown arrowDrive={arrowMoved} />\n            <br />\n            <br />\n            <DragDropImg loadImg={handleInputImg}/>\n            <Loading isLoading={loading} />\n\n        </div>\n    );\n}\n\nexport { MemeGenerator };","\nimport React from 'react';\nimport './App.css';\nimport { Header } from './components/Header/Header';\nimport { Footer } from './components/TextMove/Footer/Footer';\nimport { MemeGenerator } from './sites/MemeGenerator/MemeGenerator';\n\ntype IAppProps = {\n\n}\n\nconst App: React.FC<IAppProps> = () => {\n  return (\n    <div>\n      <Header />\n      <div style={{ maxWidth: '700px', margin: '0 auto' }}>\n        <MemeGenerator />\n      </div>\n      <div style={{marginTop:\"30px\"}}>\n      <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler):void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA"],"sourceRoot":""}