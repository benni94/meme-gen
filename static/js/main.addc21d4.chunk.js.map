{"version":3,"sources":["assets/images/Trollface.png","components/Header/Header.tsx","components/TextMove/Footer/Footer.tsx","components/Loading/Loading.tsx","assets/images/rand.jpeg","components/SearchBar/Searchbar.tsx","services/BlockScroll/UseScrollBlock.ts","components/TextMove/TextMove.tsx","components/DragDropImg/DragDropImg.tsx","components/Selector/Selector.tsx","components/Selector/SelectorWrapper.tsx","components/ColorPalette/ColorPalette.tsx","components/SliderC/SliderC.tsx","components/UpDownFix/UpDownFix.tsx","components/CropImage/CropImage.tsx","components/DialogImageCrop/DialogImageCrop.tsx","sites/MemeGenerator/MemeGenerator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","src","problem","alt","Footer","className","override","css","Loading","isLoading","useState","loading","setLoading","useEffect","color","size","Searchbar","getData","setData","items","setItems","placeholder","onSelect","item","autoFocus","formatResult","styling","safeDocument","document","TextMove","previousTouch","inputText","startPosition","getFontSize","pressed","setPressed","x","y","position","setPosition","ref","useRef","text","setText","fontSize","setFontSize","scrollBlocked","html","documentElement","body","style","current","undefined","scrollBarWidth","window","innerWidth","clientWidth","bodyPaddingRight","parseInt","getComputedStyle","getPropertyValue","overflow","paddingRight","useScrollBlock","blockScroll","allowScroll","parentX","setParentX","Number","toString","minus","offset","clientHeight","transform","onMouseMove","event","movementX","movementY","touch","touches","pageX","pageY","onTouchStart","onTouchEnd","onTouchMove","onMouseDown","onMouseUp","onMouseLeave","DragDropImg","loadImg","type","onChange","e","URL","createObjectURL","target","files","Selector","getLabel","getContent","setSelect","React","label","setLabel","content","setContent","handleChange","value","length","tt","styles","fontFamily","FormControl","fullWidth","variant","InputLabel","Select","labelId","id","map","men","i","MenuItem","SelectorWrapper","ColorPalette","changeColorHex","displayColorPicker","setDisplayColorPicker","r","g","b","a","setColor","reactCSS","width","height","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","zIndex","cover","top","right","bottom","left","onClick","rgb","hex","SliderC","getValue","getStyles","maxWidth","marginRight","setStyles","Box","Slider","min","max","defaultValue","v","aria-label","valueLabelDisplay","UpDownFix","getX","getY","getColor","setY","setX","boxStyle","backgroundColor","CropImage","getImage","setImage","getParentSize","upImg","setUpImg","imgRef","previewCanvasRef","unit","aspect","crop","setCrop","completedCrop","setCompletedCrop","onLoad","useCallback","img","image","canvas","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","pixelRatio","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","Math","round","crossorigin","onImageLoaded","c","onComplete","justifyContent","Button","disabled","toBlob","blob","previewUrl","generateDownload","Demo","parentImageSize","sendImage","open","setOpen","handleClose","saveClose","Dialog","onClose","IconButton","paddingBottom","MemeGenerator","topText","setTopText","bottomText","setBottomText","randomImage","setRandomImage","allMemeImgs","setAllMemeImgs","setparentX","parentY","setparentY","upDown","setUpDown","fetch","then","response","json","memes","data","box_count","name","url","setTimeout","clearInterval","logo","marginLeft","onSubmit","preventDefault","domtoimage","toJpeg","getElementById","quality","dataUrl","link","createElement","download","href","click","setSize","el","setInterval","getBoundingClientRect","checkParentSize","getImg","App","margin","marginTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.addc21d4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Trollface.c371feba.png\";","import React from 'react';\nimport problem from './../../assets/images/Trollface.png';\n\nexport type IHeaderProps = {\n\n}\n\nconst Header: React.FC<IHeaderProps> = () => {\n    return (\n        <header>\n            <img src={problem} alt=\"Problem?\" /> \n            <p>Meme Generator</p>\n            <small> © Beni</small>\n        </header>\n    );\n}\n\nexport { Header };","import React from 'react';\nimport './FooterStyle.css';\n\nexport type IFooterProps = {\n    \n}\n\nconst Footer: React.FC<IFooterProps> = () => {\n    return (\n        <div className=\"footerHolder\">\n            \n        </div>\n    );\n}\n\nexport { Footer };","import React, { useEffect, useState } from 'react';\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\nimport { css } from \"@emotion/react\";\nimport './LoadingStyle.css';\n\nexport type ILoadingProps = {\nisLoading:boolean;\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  box-shadow: rgb(255 255 255 / 20%) 0px 3px 29px 0px;\n`;\n\nconst Loading: React.FC<ILoadingProps> = ({isLoading }) => {\n\n    const [loading, setLoading] = useState(isLoading);\n\n    useEffect(() => {\n        setLoading(isLoading);\n    }, [isLoading]);\n\n    return (\n        <div className=\"sweet-loading\">\n            <PacmanLoader color={\"#FBD000\"}  loading={loading} css={override}  size={50} />\n        </div>\n    );\n}\n\nexport { Loading };","export default __webpack_public_path__ + \"static/media/rand.0757221b.jpeg\";","import React, { useEffect, useState } from 'react';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\nimport './SearchStyle.css'\n\nexport type ISearchbarProps = {\n    getData: any;\n    setData: (string) => void;\n}\n\nconst Searchbar: React.FC<ISearchbarProps> = ({ getData, setData }) => {\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        setItems(getData);\n    }, [getData]);\n\n\n    /*     const handleOnSearch = (string, results) => {\n            // onSearch will have as the first callback parameter\n            // the string searched and for the second the results.\n        } */\n\n    /* const handleOnHover = (result) => {\n        // the item hovered\n    } */\n\n    const handleOnSelect = (item) => {\n        // the item selected\n        setData(item);\n    }\n\n    /* const handleOnFocus = () => {\n        // ('Focused')\n    } */\n\n    const formatResult = (item) => {\n        return item;\n        // return (<p dangerouslySetInnerHTML={{__html: '<strong>'+item+'</strong>'}}></p>); //To format result as html\n    }\n\n\n    return (\n        <div>\n            {/* \n             onSearch={handleOnSearch}\n             onHover={handleOnHover}\n               onFocus={handleOnFocus}\n            */}\n            <ReactSearchAutocomplete\n                placeholder=\"Search\"\n                items={items}\n\n                onSelect={handleOnSelect}\n\n                autoFocus\n                formatResult={formatResult}\n                styling={\n                    {\n                        \"lineColor\": \"#48EDDD\",\n                        \"iconColor\": \"#48EDDD\",\n                        \"borderRadius\": \"4px\",\n                        \"boxShadow\": \"none\",\n                        \"zIndex\": \"4\",\n                        \"fontSize\": \"x-large\",\n                        \"fontFamily\": \"VT323, monospace\"\n                    }\n                }\n            />\n        </div>\n    );\n}\n\nexport { Searchbar };","import { useRef } from 'react';\n\nconst safeDocument: Document = document;\n\n/**\n * Usage:\n * const [blockScroll, allowScroll] = useScrollBlock();\n */\nconst useScrollBlock = (): [() => void, () => void] => {\n\tconst scrollBlocked = useRef(false);\n\tconst html = safeDocument.documentElement;\n\tconst { body } = safeDocument;\n\n\tconst blockScroll = (): void => {\n\t\tif (!body || !body.style || scrollBlocked.current)\n\t\t\treturn;\n\t\tif (document === undefined)\n\t\t\treturn;\n\n\t\tconst scrollBarWidth = window.innerWidth - html.clientWidth;\n\t\tconst bodyPaddingRight = parseInt(window.getComputedStyle(body).getPropertyValue('padding-right')) || 0;\n\n\t\t/**\n\t\t * 1. Fixes a bug in iOS and desktop Safari whereby setting\n\t\t *    `overflow: hidden` on the html/body does not prevent scrolling.\n\t\t * 2. Fixes a bug in desktop Safari where `overflowY` does not prevent\n\t\t *    scroll if an `overflow-x` style is also applied to the body.\n\t\t */\n\t\thtml.style.position = 'relative'; /* [1] */\n\t\thtml.style.overflow = 'hidden'; /* [2] */\n\t\tbody.style.position = 'relative'; /* [1] */\n\t\tbody.style.overflow = 'hidden'; /* [2] */\n\t\tbody.style.paddingRight = `${bodyPaddingRight + scrollBarWidth}px`;\n\n\t\tscrollBlocked.current = true;\n\t};\n\n\tconst allowScroll = (): void => {\n\t\tif (!body || !body.style || !scrollBlocked.current) return;\n\n\t\thtml.style.position = '';\n\t\thtml.style.overflow = '';\n\t\tbody.style.position = '';\n\t\tbody.style.overflow = '';\n\t\tbody.style.paddingRight = '';\n\n\t\tscrollBlocked.current = false;\n\t};\n\n\treturn [blockScroll, allowScroll];\n};\n\nexport { useScrollBlock }","import React, { useEffect, useRef, useState } from 'react';\nimport './TextMoveStyle.css';\nimport { useScrollBlock } from './../../services/BlockScroll/UseScrollBlock';\n\n\ninterface IPos {\n    x: number;\n    y: number;\n}\n\nexport type ITextMoveProps = {\n    inputText: string;\n    startPosition: IPos;\n    getFontSize: string;\n}\n\n\nconst TextMove: React.FC<ITextMoveProps> = ({ inputText, startPosition, getFontSize }) => {\n\n    const [pressed, setPressed] = useState(false);\n    const [position, setPosition] = useState({ x: 0, y: 0 });\n    const ref = useRef() as any;\n    const [text, setText] = useState(\"Write...\");\n    const [fontSize, setFontSize] = useState(\"2\");\n    const [blockScroll, allowScroll] = useScrollBlock();\n    const [parentX, setParentX] = useState(0);\n\n    useEffect(() => {\n        setParentX(startPosition.x);\n\n        if (parentX < 400 && parentX !== 0) {\n            setFontSize((Number(getFontSize) / 1.5).toString());\n        }\n        else {\n            setFontSize(getFontSize);\n        }\n\n        let minus = 0;\n        let offset = 0;\n        if (startPosition.y > 0) {\n            offset = 50;\n            minus = ref.current.clientHeight;\n        }\n        //set the position of the child in the center of the parent         \n        setPosition({\n            x: (startPosition.x - ref.current.clientWidth) / 2,\n            y: (startPosition.y + offset) - minus\n        });\n    }, [startPosition]);\n\n    // Monitor changes to position state and update DOM\n    useEffect(() => {\n        if (ref.current) {\n            ref.current.style.transform = `translate(${position.x}px, ${position.y}px)`\n        }\n    }, [position]);\n\n    useEffect(() => {\n        setText(inputText);\n    }, [inputText]);\n\n    let previousTouch;\n    const onMouseMove = (event) => {\n        if (pressed) {\n\n            switch (event.movementX !== undefined) {\n                case true:\n\n                    setPosition({\n                        x: position.x + event.movementX,\n                        y: position.y + event.movementY\n                    })\n                    break;\n                case false:\n                    var touch = event.touches[0];\n\n                    if (previousTouch) {\n                        event.movementX = touch.pageX - previousTouch.pageX;\n                        event.movementY = touch.pageY - previousTouch.pageY;\n\n                        setPosition({\n                            x: position.x + event.movementX,\n                            y: position.y + event.movementY\n                        })\n                    }\n\n                    previousTouch = touch;\n                    break;\n            }\n        }\n    }\n\n    return (\n        <div\n            className=\"inputTextHolder\"\n            ref={ref}\n            onTouchStart={() => { setPressed(true); blockScroll(); }}\n            onTouchEnd={() => { setPressed(false); allowScroll(); }}\n            onTouchMove={onMouseMove}\n\n            onMouseMove={onMouseMove}\n            onMouseDown={() => setPressed(true)}\n            onMouseUp={() => setPressed(false)}\n            onMouseLeave={() => setPressed(false)}\n        >\n            <h2 className=\"inputText\" style={{ fontSize: fontSize + \"em\" }}>{text}</h2>\n\n        </div>\n    );\n}\n\nexport { TextMove };","import React from 'react';\nimport './DragDropStyle.css';\n\nexport type IDragDropImgProps = {\n    loadImg: (e:any) => void;\n}\n\nconst DragDropImg: React.FC<IDragDropImgProps> = ({loadImg}) => {\n\n\n    function handleInputImg(e: any) {\n        loadImg(URL.createObjectURL(e.target.files[0]));\n    }\n\n    return (\n        <div className=\"inputImgHolder\">\n            <label className=\"custom-file-upload\">\n            <input   type=\"file\" onChange={handleInputImg} />\n            <i className=\"inputImg\" ></i>\n            <i className=\"inputText\">Custom Upload</i> \n            </label>\n        </div> \n    );\n}\n\nexport { DragDropImg };","import { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\nimport React, { useEffect } from 'react';\nimport './SelectorStyle.css';\n\nexport type IContent = {\n    value: number;\n    content: string;\n}\n\nexport type ISelectorProps = {\n    getLabel: string;\n    getContent: IContent[];\n    setSelect: (e: IContent) => void;\n}\n\nconst Selector: React.FC<ISelectorProps> = ({ getLabel, getContent, setSelect }) => {\n    const [label, setLabel] = React.useState('');\n    const [content, setContent] = React.useState([{}] as IContent[]);\n\n    const handleChange = (e: any) => {\n        setLabel(e.target.value);\n        setSelect(e);\n    };\n\n    useEffect(() => {\n        setContent(getContent);\n        if (content[0].value !== undefined && label.length === 0) {\n            setLabel(content[1].value.toString());\n            const tt = { target: content[1] }\n            handleChange(tt)\n        }\n    }, [getContent]);\n\n    const styles = { fontFamily: \"VT323, monospace\" }\n\n    return (\n        <div className=\"SelectHolder\">\n\n            <FormControl fullWidth variant=\"outlined\">\n                <InputLabel style={styles} >{getLabel}</InputLabel>\n                <Select\n                    style={styles}\n                    labelId=\"selector\"\n                    id=\"selector\"\n                    value={label}\n                    label={getLabel}\n                    onChange={handleChange}\n                >\n                    {content.map((men, i) =>\n                        <MenuItem style={styles} key={i} value={men.value}>{men.content}</MenuItem>\n                    )}\n\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport { Selector };\n\n\n","import React from 'react';\nimport { IContent, Selector } from './Selector';\n\nexport type ISelectorWrapperProps = {\n    setSelect:(e:IContent)=>void;\n}\n\n\nconst SelectorWrapper: React.FC<ISelectorWrapperProps> = ({setSelect}) => {\n    const cont: IContent[] = [\n\n        { value: 1, content: \"small\" },\n        { value: 2, content: \"medium\" },\n        { value: 3, content: \"large\" }\n    ];\n\n\n    \n    return (\n        <div>\n            <Selector setSelect={setSelect} getLabel={\"Font Size\"} getContent={cont} />\n        </div>\n    );\n}\n\nexport { SelectorWrapper };","import React, { useState } from 'react';\nimport './ColorPaletteStyle.css';\nimport reactCSS from 'reactcss';\nimport { SketchPicker } from 'react-color';\n\nexport type IColorPaletteProps = {\n    changeColorHex: (e: string) => void;\n}\n\nconst ColorPalette: React.FC<IColorPaletteProps> = ({changeColorHex}) => {\n    const [displayColorPicker, setDisplayColorPicker] = useState(false);\n\n    const [color, setColor] = useState({\n        r: '0',\n        g: '0',\n        b: '0',\n        a: '1',\n    });\n\n    const handleClick = () => {\n        setDisplayColorPicker(!displayColorPicker);\n    };\n\n    const handleClose = () => {\n        setDisplayColorPicker(false);\n    };\n\n    const handleChange = (color) => {\n        setColor(color.rgb);\n        changeColorHex(color.hex);\n    };\n\n\n    const styles = reactCSS({\n        'default': {\n            color: {\n                width: '36px',\n                height: '14px',\n                borderRadius: '2px',\n                background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n            },\n            swatch: {\n                padding: '5px',\n                background: '#fff',\n                borderRadius: '1px',\n                boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n                display: 'inline-block',\n                cursor: 'pointer',\n            },\n            popover: {\n                position: 'absolute',\n                zIndex: '2',\n            },\n            cover: {\n                position: 'fixed',\n                top: '0px',\n                right: '0px',\n                bottom: '0px',\n                left: '0px',\n            },\n        },\n    });\n\n\n    return (\n        <div>\n            <div style={styles.swatch} onClick={handleClick}>\n                <div style={styles.color} />\n            </div>\n            {displayColorPicker ? <div style={styles.popover}>\n                <div style={styles.cover} onClick={handleClose} />\n                <SketchPicker color={color} onChange={handleChange} />\n            </div> : null}\n        </div>\n    );\n}\n\nexport { ColorPalette };","import React, { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport { Slider } from '@mui/material';\nimport './SliderC.style.css';\n\nexport interface IStyle {\n    maxWidth: string;\n    marginRight:string;\n}\n\nexport type ISliderCProps = {\n    getValue: (v: number) => void;\n    getStyles?: IStyle;\n}\n\nconst SliderC: React.FC<ISliderCProps> = ({ getValue, getStyles }) => {\n\n    const [styles, setStyles] = useState({ maxWidth: \"100%\" , marginRight:\"0px\"});\n\n    useEffect(() => {\n        if (getStyles !== undefined) {\n            setStyles(getStyles);\n        }\n    }, [getStyles]);\n\n    const change = (e) => {\n        if (e.target.value === null) {\n            return;\n        }\n        getValue(e.target.value);\n    }\n\n\n    return (\n        <Box width={600} style={styles}>\n            <Slider\n                size=\"small\"\n                min={0}\n                max={200}\n                defaultValue={0}\n                onChange={(v) => change(v)}\n                aria-label=\"Small\"\n                valueLabelDisplay=\"auto\"\n            />\n\n        </Box>\n    );\n}\n\nexport { SliderC };","import React, { useEffect, useState } from 'react';\nimport './UpDownFix.style.css'\n\nexport type IUpDownFixProps = {\n    getX: number;\n    getY: number;\n    getColor: string;\n}\n\nconst UpDownFix: React.FC<IUpDownFixProps> = ({ getX, getY, getColor }) => {\n    const [y, setY] = useState(20);\n    const [x, setX] = useState(20);\n    const [color, setColor] = useState(\"#000000\");\n\n    useEffect(() => {\n        setX(getX);\n    }, [getX]);\n\n    useEffect(() => {\n       setY(getY);\n    }, [getY]);\n\n    useEffect(() => {\n        setColor(getColor);\n    }, [getColor]);\n\n    const boxStyle = {\n        width: `${x}px`,\n        height: `${y}px`,\n        backgroundColor: color\n    };\n\n    return (\n        <div\n            className=\"UpDownFix-wrapper\"\n            style={boxStyle}\n        >\n\n        </div>\n    );\n}\n\nexport { UpDownFix };\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport CropIcon from '@mui/icons-material/Crop';\nimport { Button } from '@mui/material';\n\nexport interface IParentSize {\n  width: string;\n  height: string;\n}\n\nexport type ICropImageProps = {\n  getImage: any;\n  setImage: (e: any) => void;\n  getParentSize: IParentSize;\n}\n\nconst CropImage: React.FC<ICropImageProps> = ({ getImage, setImage, getParentSize }) => {\n  const [upImg, setUpImg] = useState(null as any);\n  const imgRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n  const [crop, setCrop] = useState({ unit: '%', width: 30, aspect: 16 / 9 } as any);\n  const [completedCrop, setCompletedCrop] = useState(null as any);\n\n  const onSelectFile = (e: any) => {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader: any = new FileReader();\n      reader.addEventListener('load', () => setUpImg(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n\n  useEffect(() => {\n    if (getImage.length != 0) {\n      setUpImg(getImage);\n    }\n  }, [getImage]);\n\n\n  const onLoad = useCallback((img) => {\n    imgRef.current = img;\n  }, []);\n\n  useEffect(() => {\n    imgRef.current = getImage;\n    return;\n  }, [getImage]);\n\n  useEffect(() => {\n    if (!completedCrop || !previewCanvasRef.current || !imgRef.current || imgRef === null) {\n      return;\n    }\n\n    const image: any = imgRef.current;\n    const canvas: any = previewCanvasRef.current;\n    const crop: any = completedCrop;\n\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    const ctx = canvas.getContext('2d');\n    const pixelRatio = window.devicePixelRatio;\n\n    canvas.width = crop.width * pixelRatio * scaleX;\n    canvas.height = crop.height * pixelRatio * scaleY;\n\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = 'high';\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width * scaleX,\n      crop.height * scaleY\n    );\n  }, [completedCrop]);\n\n  function generateDownload(canvas, crop) {\n    if (!crop || !canvas) {\n      return;\n    }\n    canvas.toBlob(\n      (blob) => {\n        const previewUrl = window.URL.createObjectURL(blob);\n\n        //set up  crossorigin='anonymous' in image because of CORS!!!\n        setUpImg(previewUrl);\n        setImage(previewUrl)\n\n\n\n        /*  const anchor = document.createElement('a');\n        anchor.download = 'cropPreview.png';\n        anchor.href = URL.createObjectURL(blob);\n        anchor.click();\n        window.URL.revokeObjectURL(previewUrl); */\n      },\n      'image/png',\n      1\n    );\n  }\n\n\n  return (\n    <div>\n      <canvas\n        ref={previewCanvasRef}\n        // Rounding is important so the canvas width and height matches/is a multiple for sharpness.\n        style={{\n          width: Math.round(completedCrop?.width ?? 0),\n          height: Math.round(completedCrop?.height ?? 0),\n          display: 'none'\n        }}\n      />\n      <ReactCrop\n        src={upImg}\n        style={{ width: getParentSize?.width + \"px\" || \"680\" + \"px\", height: getParentSize?.height || \"auto\" }}\n        crossorigin='anonymous'\n        onImageLoaded={onLoad}\n        crop={crop}\n        onChange={(c) => setCrop(c)}\n        onComplete={(c) => setCompletedCrop(c)}\n      />\n\n      <div style={{ display: 'flex', justifyContent: 'flex-end', padding:'30px'  }}>\n        <Button\n        variant='contained'\n\n          disabled={!completedCrop?.width || !completedCrop?.height}\n          onClick={() =>\n            generateDownload(previewCanvasRef.current, completedCrop)\n          }\n        >\n         Crop &nbsp; <CropIcon />\n        </Button>\n      </div>\n\n    </div>\n  );\n}\n\nexport { CropImage };","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\nimport { CropImage, IParentSize } from \"../CropImage/CropImage\";\nimport { IconButton } from \"@mui/material\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport './DialogImageCrop.style.css';\nimport CropIcon from '@mui/icons-material/Crop';\nimport DoneIcon from '@mui/icons-material/Done';\n\nexport type IDialogImageCrop = {\n    getImage: string;\n    sendImage: (i: string) => void\n    parentImageSize: IParentSize;\n}\n\nexport const Demo: React.FC<IDialogImageCrop> = ({ parentImageSize, getImage, sendImage }) => {\n    const [open, setOpen] = React.useState(false);\n    const [image, setImage] = React.useState(getImage);\n\n    const handleClickOpen = () => {\n        setImage(getImage)\n        setOpen(true);\n    };\n\n    React.useEffect(() => {\n        setImage(getImage);\n    }, [getImage]);\n\n\n\n    const handleClose = (saveClose) => {\n\n        if (saveClose === true) {\n            sendImage(image);\n        }\n\n        setOpen(false);\n    };\n\n    return (\n        <div>\n\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\n                <CropIcon />\n            </Button>\n\n            <Dialog onClose={handleClose} open={open}>\n                <div className=\"closeIconWrapper\">\n                    <IconButton onClick={handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n\n                {/*  <DialogTitle>Set backup account</DialogTitle> */}\n\n                <CropImage\n                    getImage={image}\n                    setImage={(e) => setImage(e)}\n                    getParentSize={{ width: parentImageSize.width, height: 'auto' }} />\n\n\n                <div style={{ display: \"flex\", justifyContent: 'flex-end', paddingBottom: '30px', paddingRight: '30px' }}>\n\n                    <Button\n                        variant='contained'\n                        onClick={() => handleClose(true)}>\n                        Submit &nbsp; <DoneIcon />\n                    </Button>\n                </div>\n\n            </Dialog>\n\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport './../../Styles/globstyle.css';\nimport domtoimage from 'dom-to-image';\nimport { Loading } from '../../components/Loading/Loading';\nimport logo from './../../assets/images/rand.jpeg';\nimport { Searchbar } from '../../components/SearchBar/Searchbar';\nimport { Button, Dialog } from '@mui/material';\nimport { TextMove } from '../../components/TextMove/TextMove';\nimport { DragDropImg } from '../../components/DragDropImg/DragDropImg';\nimport { SelectorWrapper } from '../../components/Selector/SelectorWrapper';\nimport { ColorPalette } from '../../components/ColorPalette/ColorPalette';\nimport { CropImage } from '../../components/CropImage/CropImage';\nimport { SliderC } from '../../components/SliderC/SliderC';\nimport { UpDownFix } from '../../components/UpDownFix/UpDownFix';\nimport { Demo } from '../../components/DialogImageCrop/DialogImageCrop';\n\nexport type IMemeGeneratorProps = {\n\n}\n\n\nconst MemeGenerator: React.FC<IMemeGeneratorProps> = () => {\n    const [topText, setTopText] = useState(\"\");\n    const [bottomText, setBottomText] = useState(\"\");\n    const [randomImage, setRandomImage] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [allMemeImgs, setAllMemeImgs] = useState([]);\n    const [parentX, setparentX] = useState(0);\n    const [parentY, setparentY] = useState(0);\n    const [fontSize, setFontSize] = useState(\"1\");\n    const [color, setColor] = useState(\"#000000\");\n    const [upDown, setUpDown] = useState(0);\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(response => response.json())\n            .then(response => {\n                let memes = [];\n                memes = response.data.memes.map((data: any) => {\n                    return {\n                        box_count: data.box_count,\n                        height: data.height,\n                        id: Number(data.id),\n                        name: data.name,\n                        url: data.url,\n                        width: data.width\n                    }\n                })\n                setAllMemeImgs(memes);\n                setTimeout(() => {\n                    setLoading(false);\n                }, 1000);\n            })\n    }, []);\n\n    useEffect(() => {\n        return () => clearInterval();\n    });\n\n    useEffect(() => {\n        if (randomImage.length != 0) {\n            // console.log(randomImage);\n        } else {\n            // console.log(logo);\n            setRandomImage(logo)\n        }\n\n    }, [randomImage]);\n\n    const handleSubmit = (e: any) => {\n        e.preventDefault();\n        domtoimage.toJpeg(document.getElementById('memeForm') as HTMLElement, { quality: 1 })\n            .then((dataUrl) => {\n                const link = document.createElement('a');\n                link.download = 'beniMeme.jpeg';\n                link.href = dataUrl;\n                link.click();\n            });\n    }\n\n    function getSearch(event) {\n        setRandomImage(event.url);\n    }\n\n    function sliderMoved(e: number) {\n        setUpDown(e);\n    }\n\n    function checkParentSize(el) {\n        if (!el) return;\n        setInterval(() => {\n            setparentX(el.getBoundingClientRect().width);\n            setparentY(el.getBoundingClientRect().height - 50);\n        }, 400);\n    }\n\n    function handleInputImg(getImg: string) {\n        setRandomImage(getImg);\n    }\n\n    function setSize(e: any) {\n        setFontSize(e.target.value.toString());\n    }\n\n    function changeColor(e: string) {\n        setColor(e);\n    }\n\n\n\n    return (\n        <div style={{ marginLeft: \"10px\", marginRight: \"10px\" }}>\n\n            <br />\n            <br />\n            <Searchbar getData={allMemeImgs} setData={getSearch} />\n            <br />\n\n            <form className=\"meme-form\" onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder=\"Top\" value={topText} onChange={e => setTopText(e.target.value)} />\n                <input type=\"text\" placeholder=\"Bottom\" value={bottomText} onChange={e => setBottomText(e.target.value)} />\n                <Button variant=\"contained\" type=\"submit\">Download</Button>\n            </form>\n            <SelectorWrapper setSelect={(e) => setSize(e)} />\n            <br />\n\n            <div className=\"work-items\">\n                <ColorPalette changeColorHex={changeColor} />\n                <Demo parentImageSize={{ width: \"680\", height: 'auto' }} getImage={randomImage} sendImage={(i) => setRandomImage(i)} />\n                <SliderC getValue={sliderMoved} getStyles={{ maxWidth: '50%', marginRight: '10px' }} />\n            </div>\n            <br />\n            <div\n                ref={el => { checkParentSize(el) }}\n                className=\"meme\" id=\"memeForm\" >\n\n                <TextMove getFontSize={fontSize} inputText={topText} startPosition={{ x: parentX, y: 0 }} />\n                <TextMove getFontSize={fontSize} inputText={bottomText} startPosition={{ x: parentX, y: parentY }} />\n\n                <UpDownFix getX={Number(parentX)} getY={upDown} getColor={color} />\n\n\n                <img src={randomImage === \"\" ? logo : randomImage} alt=\"Meme\" />\n\n                <UpDownFix getX={Number(parentX)} getY={upDown} getColor={color} />\n            </div>\n\n            <br />\n            <DragDropImg loadImg={handleInputImg} />\n            <Loading isLoading={loading} />\n\n        </div>\n    );\n}\n\nexport { MemeGenerator };","\nimport React from 'react';\nimport './App.css';\nimport { Header } from './components/Header/Header';\nimport { Footer } from './components/TextMove/Footer/Footer';\nimport { MemeGenerator } from './sites/MemeGenerator/MemeGenerator';\n\ntype IAppProps = {\n\n}\n\nconst App: React.FC<IAppProps> = () => {\n  return (\n    <div>\n      <Header />\n      <div style={{ maxWidth: '700px', margin: '0 auto' }}>\n        <MemeGenerator />\n      </div>\n      <div style={{marginTop:\"30px\"}}>\n      <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler):void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA"],"sourceRoot":""}