{"version":3,"sources":["assets/images/Trollface.png","components/Header/Header.tsx","components/Footer/Footer.tsx","components/Loading/Loading.tsx","assets/images/rand.jpeg","components/SearchBar/Searchbar.tsx","services/BlockScroll/UseScrollBlock.ts","components/TextMove/TextMove.tsx","components/DragDropImg/DragDropImg.tsx","components/Selector/Selector.tsx","components/Selector/SelectorWrapper.tsx","components/ColorPalette/ColorPalette.tsx","components/SliderC/SliderC.tsx","components/UpDownFix/UpDownFix.tsx","components/CropImage/CropImage.tsx","components/DialogImageCrop/DialogImageCrop.tsx","sites/MemeGenerator/MemeGenerator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","src","problem","alt","Footer","className","override","css","Loading","isLoading","useState","loading","setLoading","useEffect","color","size","Searchbar","getData","setData","items","setItems","placeholder","onSelect","item","autoFocus","formatResult","styling","safeDocument","document","TextMove","previousTouch","inputText","startPosition","getFontSize","parentHeight","pressed","setPressed","x","y","position","setPosition","inputTextHolderRef","useRef","text","setText","fontSize","setFontSize","scrollBlocked","html","documentElement","body","style","current","undefined","scrollBarWidth","window","innerWidth","clientWidth","bodyPaddingRight","parseInt","getComputedStyle","getPropertyValue","overflow","paddingRight","useScrollBlock","blockScroll","allowScroll","Number","toString","minus","offset","clientHeight","transform","onMouseMove","event","movementX","movementY","touch","touches","pageX","pageY","ref","onTouchStart","onTouchEnd","onTouchMove","onMouseDown","onMouseUp","onMouseLeave","DragDropImg","loadImg","type","onChange","e","URL","createObjectURL","target","files","Selector","getLabel","getContent","setSelect","React","label","setLabel","content","setContent","handleChange","value","length","tt","styles","fontFamily","FormControl","fullWidth","variant","InputLabel","Select","labelId","id","map","men","i","MenuItem","SelectorWrapper","ColorPalette","changeColorHex","displayColorPicker","setDisplayColorPicker","r","g","b","a","setColor","reactCSS","width","height","background","padding","swatch","borderRadius","cursor","popover","zIndex","cover","top","right","bottom","left","onClick","rgb","hex","SliderC","getValue","Box","Slider","min","max","defaultValue","v","aria-label","valueLabelDisplay","UpDownFix","getX","getY","getColor","setY","setX","boxStyle","backgroundColor","CropImage","getImage","setImage","getParentSize","upImg","setUpImg","imgRef","previewCanvasRef","unit","aspect","crop","setCrop","completedCrop","setCompletedCrop","onLoad","useCallback","img","image","canvas","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","pixelRatio","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","Math","round","display","marginBottom","marginLeft","marginTop","Button","disabled","toBlob","blob","previewUrl","generateDownload","crossorigin","onImageLoaded","c","onComplete","DialogImageCrop","parentImageSize","sendImage","open","setOpen","handleClose","saveClose","Dialog","onClose","IconButton","justifyContent","paddingBottom","MemeGenerator","topText","setTopText","bottomText","setBottomText","randomImage","setRandomImage","allMemeImgs","setAllMemeImgs","parentX","setparentX","parentY","setparentY","upDown","setUpDown","fetch","then","response","json","memes","data","box_count","name","url","setTimeout","clearInterval","logo","handleSubmit","preventDefault","domtoimage","toJpeg","getElementById","quality","dataUrl","link","createElement","download","href","click","marginRight","onSubmit","setSize","el","setInterval","getBoundingClientRect","checkParentSize","getImg","App","maxWidth","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"wbAAe,G,cAAA,IAA0B,uC,OCOnCA,EAAiC,WACnC,OACI,mCACI,qBAAKC,IAAKC,EAASC,IAAI,aACvB,+CACA,mDCLNC,G,OAAiC,WACnC,OACI,qBAAKC,UAAU,mB,oECAjBC,G,OAAWC,cAAH,iJAORC,EAAmC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,UAAgB,EAEzBC,mBAASD,GAFgB,mBAEhDE,EAFgD,KAEvCC,EAFuC,KAQvD,OAJAC,qBAAU,WACND,EAAWH,KACZ,CAACA,IAGA,qBAAKJ,UAAU,gBAAf,SACI,cAAC,IAAD,CAAcS,MAAO,UAAYH,QAASA,EAASJ,IAAKD,EAAWS,KAAM,QC1BtE,MAA0B,kC,SCSnCC,G,OAAuC,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAAc,EACzCR,mBAAS,IADgC,mBAC5DS,EAD4D,KACrDC,EADqD,KAGnEP,qBAAU,WACNO,EAASH,KACV,CAACA,IA2BJ,OACI,8BAMI,cAAC,0BAAD,CACII,YAAY,SACZF,MAAOA,EAEPG,SA1BW,SAACC,GAEpBL,EAAQK,IA0BAC,WAAS,EACTC,aApBS,SAACF,GAClB,OAAOA,GAoBCG,QACI,CACI,UAAa,UACb,UAAa,UACb,aAAgB,MAChB,UAAa,OACb,OAAU,IACV,SAAY,UACZ,WAAc,0B,SC9DhCC,G,OAAyBC,UCgBzBC,EAAqC,SAAC,GAA6D,IAkDjGC,EAlDsCC,EAA0D,EAA1DA,UAAWC,EAA+C,EAA/CA,cAAeC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAAmB,EAEtExB,oBAAS,GAF6D,mBAE7FyB,EAF6F,KAEpFC,EAFoF,OAGpE1B,mBAAS,CAAE2B,EAAG,EAAGC,EAAG,IAHgD,mBAG7FC,EAH6F,KAGnFC,EAHmF,KAI9FC,EAAqBC,mBAJyE,EAK5EhC,mBAAS,YALmE,mBAK7FiC,EAL6F,KAKvFC,EALuF,OAMpElC,mBAAS,KAN2D,mBAM7FmC,EAN6F,KAMnFC,EANmF,ODVjF,WACtB,IAAMC,EAAgBL,kBAAO,GACvBM,EAAOrB,EAAasB,gBAClBC,EAASvB,EAATuB,KAsCR,MAAO,CApCa,WACnB,GAAKA,GAASA,EAAKC,QAASJ,EAAcK,cAEzBC,IAAbzB,SAAJ,CAGA,IAAM0B,EAAiBC,OAAOC,WAAaR,EAAKS,YAC1CC,EAAmBC,SAASJ,OAAOK,iBAAiBV,GAAMW,iBAAiB,mBAAqB,EAQtGb,EAAKG,MAAMZ,SAAW,WACtBS,EAAKG,MAAMW,SAAW,SACtBZ,EAAKC,MAAMZ,SAAW,WACtBW,EAAKC,MAAMW,SAAW,SACtBZ,EAAKC,MAAMY,aAAX,UAA6BL,EAAmBJ,EAAhD,MAEAP,EAAcK,SAAU,IAGL,WACdF,GAASA,EAAKC,OAAUJ,EAAcK,UAE3CJ,EAAKG,MAAMZ,SAAW,GACtBS,EAAKG,MAAMW,SAAW,GACtBZ,EAAKC,MAAMZ,SAAW,GACtBW,EAAKC,MAAMW,SAAW,GACtBZ,EAAKC,MAAMY,aAAe,GAE1BhB,EAAcK,SAAU,KCrBaY,GAPiE,mBAO7FC,EAP6F,KAOhFC,EAPgF,KASpGrD,qBAAU,WAEFmB,EAAcK,EAAI,KAA2B,IAApBL,EAAcK,EACvCS,GAAaqB,OAAOlC,GAAe,KAAKmC,YAGxCtB,EAAYb,GAGhB,IAAIoC,EAAQ,EACRC,EAAS,EACTtC,EAAcM,EAAI,IAClBgC,EAAS,GACTD,EAAQ5B,EAAmBW,QAAQmB,cAGvC/B,EAAY,CACRH,GAAIL,EAAcK,EAAII,EAAmBW,QAAQK,aAAe,EAChEnB,EAAIN,EAAcM,EAAIgC,EAAUD,MAGrC,CAACrC,IAGJnB,qBAAU,WACF0B,EAASF,GAAK,IAAKE,EAASF,EAAI,GAChCE,EAASD,IAAM,KAAMC,EAASD,GAAK,IAElCN,EAAcK,GAAKI,EAAmBW,QAAQK,YAAclB,EAASF,IAAO,IAAKE,EAASF,EAAIL,EAAcK,EAAII,EAAmBW,QAAQK,aAC3IlB,EAASD,EAAIJ,GAAiB,IAAKK,EAASD,EAAIJ,GAEjDO,EAAmBW,UACnBX,EAAmBW,QAAQD,MAAMqB,UAAjC,oBAA0DjC,EAASF,EAAnE,eAA2EE,EAASD,EAApF,UAGL,CAACC,IAEJ1B,qBAAU,WACN+B,EAAQb,KACT,CAACA,IAGJ,IAAM0C,EAAc,SAACC,GACjB,GAAIvC,EAEA,YAA4BkB,IAApBqB,EAAMC,WACV,KAAK,EAEDnC,EAAY,CACRH,EAAGE,EAASF,EAAIqC,EAAMC,UACtBrC,EAAGC,EAASD,EAAIoC,EAAME,YAE1B,MACJ,KAAK,EACD,IAAIC,EAAQH,EAAMI,QAAQ,GAEtBhD,IACA4C,EAAMC,UAAYE,EAAME,MAAQjD,EAAciD,MAC9CL,EAAME,UAAYC,EAAMG,MAAQlD,EAAckD,MAE9CxC,EAAY,CACRH,EAAGE,EAASF,EAAIqC,EAAMC,UACtBrC,EAAGC,EAASD,EAAIoC,EAAME,aAI9B9C,EAAgB+C,IAMhC,OACI,qBACIxE,UAAU,kBACV4E,IAAKxC,EACLyC,aAAc,WAAQ9C,GAAW,GAAO6B,KACxCkB,WAAY,WAAQ/C,GAAW,GAAQ8B,KACvCkB,YAAaX,EAEbA,YAAaA,EACbY,YAAa,kBAAMjD,GAAW,IAC9BkD,UAAW,kBAAMlD,GAAW,IAC5BmD,aAAc,kBAAMnD,GAAW,IAVnC,SAaI,oBAAI/B,UAAU,YAAY8C,MAAO,CAAEN,SAAUA,EAAW,MAAxD,SAAiEF,OC1GvE6C,G,OAA2C,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAO/C,OACI,qBAAKpF,UAAU,iBAAf,SACI,wBAAOA,UAAU,qBAAjB,UACA,uBAASqF,KAAK,OAAOC,SAP7B,SAAwBC,GACpBH,EAAQI,IAAIC,gBAAgBF,EAAEG,OAAOC,MAAM,QAOvC,mBAAG3F,UAAU,aACb,mBAAGA,UAAU,YAAb,iC,oCCJN4F,G,OAAqC,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UAAgB,EACtDC,IAAM3F,SAAS,IADuC,mBACzE4F,EADyE,KAClEC,EADkE,OAElDF,IAAM3F,SAAS,CAAC,KAFkC,mBAEzE8F,EAFyE,KAEhEC,EAFgE,KAI1EC,EAAe,SAACd,GAClBW,EAASX,EAAEG,OAAOY,OAClBP,EAAUR,IAGd/E,qBAAU,WAEN,GADA4F,EAAWN,QACc9C,IAArBmD,EAAQ,GAAGG,OAAwC,IAAjBL,EAAMM,OAAc,CACtDL,EAASC,EAAQ,GAAGG,MAAMvC,YAC1B,IAAMyC,EAAK,CAAEd,OAAQS,EAAQ,IAC7BE,EAAaG,MAElB,CAACV,IAEJ,IAAMW,EAAS,CAAEC,WAAY,oBAE7B,OACI,qBAAK1G,UAAU,eAAf,SAEI,eAAC2G,EAAA,EAAD,CAAaC,WAAS,EAACC,QAAQ,WAA/B,UACI,cAACC,EAAA,EAAD,CAAYhE,MAAO2D,EAAnB,SAA6BZ,IAC7B,cAACkB,EAAA,EAAD,CACIjE,MAAO2D,EACPO,QAAQ,WACRC,GAAG,WACHX,MAAOL,EACPA,MAAOJ,EACPP,SAAUe,EANd,SAQKF,EAAQe,KAAI,SAACC,EAAKC,GAAN,OACT,cAACC,EAAA,EAAD,CAAUvE,MAAO2D,EAAgBH,MAAOa,EAAIb,MAA5C,SAAoDa,EAAIhB,SAA1BiB,eCzChDE,EAAmD,SAAC,GAAiB,IAAhBvB,EAAe,EAAfA,UAUvD,OACI,8BACI,cAAC,EAAD,CAAUA,UAAWA,EAAWF,SAAU,YAAaC,WAXtC,CAErB,CAAEQ,MAAO,EAAGH,QAAS,SACrB,CAAEG,MAAO,EAAGH,QAAS,UACrB,CAAEG,MAAO,EAAGH,QAAS,e,kCCJvBoB,EAA6C,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eAAoB,EACjBnH,oBAAS,GADQ,mBAC9DoH,EAD8D,KAC1CC,EAD0C,OAG3CrH,mBAAS,CAC/BsH,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,MAP8D,mBAG9DrH,EAH8D,KAGvDsH,EAHuD,KAwB/DtB,EAASuB,IAAS,CACpB,QAAW,CACPvH,MAAO,CACHwH,MAAO,OACPC,OAAQ,OACRC,WAAW,QAAD,OAAU1H,EAAMkH,EAAhB,aAAsBlH,EAAMmH,EAA5B,aAAkCnH,EAAMoH,EAAxC,aAA8CpH,EAAMqH,EAApD,KACVM,QAAQ,QAEZC,OAAQ,CACJD,QAAS,MACTD,WAAY,OACZG,aAAc,MACdC,OAAQ,WAEZC,QAAS,CACLtG,SAAU,WACVuG,OAAQ,KAEZC,MAAO,CACHxG,SAAU,QACVyG,IAAK,MACLC,MAAO,MACPC,OAAQ,MACRC,KAAM,UAMlB,OACI,gCACI,qBAAKhG,MAAO2D,EAAO4B,OAAQU,QA7Cf,WAChBrB,GAAuBD,IA4CnB,SACI,qBAAK3E,MAAO2D,EAAOhG,UAEtBgH,EAAqB,sBAAK3E,MAAO2D,EAAO+B,QAAnB,UAClB,qBAAK1F,MAAO2D,EAAOiC,MAAOK,QA7ClB,WAChBrB,GAAsB,MA6Cd,cAAC,IAAD,CAAcjH,MAAOA,EAAO6E,SA1CnB,SAAC7E,GAClBsH,EAAStH,EAAMuI,KACfxB,EAAe/G,EAAMwI,WAyCR,S,kBCxDfC,G,OAAmC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAUxC,OACI,cAACC,EAAA,EAAD,CAAKnB,MAAO,IAAKjI,UAAU,cAA3B,SACI,cAACqJ,EAAA,EAAD,CACI3I,KAAK,QACL4I,IAAK,EACLC,IAAK,IACLC,aAAc,EACdlE,SAAU,SAACmE,GAfR,IAAClE,EACW,QADXA,EAeoBkE,GAd1B/D,OAAOY,OAGb6C,EAAS5D,EAAEG,OAAOY,QAYVoD,aAAW,QACXC,kBAAkB,aCpB5BC,G,OAAuC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAAe,EACrD1J,mBAAS,IAD4C,mBAChE4B,EADgE,KAC7D+H,EAD6D,OAErD3J,mBAAS,IAF4C,mBAEhE2B,EAFgE,KAE7DiI,EAF6D,OAG7C5J,mBAAS,WAHoC,mBAGhEI,EAHgE,KAGzDsH,EAHyD,KAKvEvH,qBAAU,WACNyJ,EAAKJ,KACN,CAACA,IAEJrJ,qBAAU,WACPwJ,EAAKF,KACL,CAACA,IAEJtJ,qBAAU,WACNuH,EAASgC,KACV,CAACA,IAEJ,IAAMG,EAAW,CACbjC,MAAM,GAAD,OAAKjG,EAAL,MACLkG,OAAO,GAAD,OAAKjG,EAAL,MACNkI,gBAAiB1J,GAGrB,OACI,qBACIT,UAAU,oBACV8C,MAAOoH,M,qDCrBbE,EAAuC,SAAC,GAA2C,IAAD,IAAxCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAAoB,EAC5DlK,mBAAS,MADmD,mBAC/EmK,EAD+E,KACxEC,EADwE,KAEhFC,EAASrI,iBAAO,MAChBsI,EAAmBtI,iBAAO,MAHsD,EAI9DhC,mBAAS,CAAEuK,KAAM,IAAK3C,MAAO,GAAI4C,OAAQ,GAAK,IAJgB,mBAI/EC,EAJ+E,KAIzEC,EAJyE,OAK5C1K,mBAAS,MALmC,mBAK/E2K,EAL+E,KAKhEC,EALgE,OAMxD5K,oBAAS,GAN+C,mBAM/EC,EAN+E,KAMtEC,EANsE,KAgBtFC,qBAAU,WACe,GAAnB6J,EAAS9D,QACXkE,EAASJ,KAEV,CAACA,IAGJ,IAAMa,EAASC,uBAAY,SAACC,GAC1BV,EAAO3H,QAAUqI,IAChB,IA6DH,OA3DA5K,qBAAU,WACRkK,EAAO3H,QAAUsH,IAEhB,CAACA,IAEJ7J,qBAAU,WACR,GAAKwK,GAAkBL,EAAiB5H,SAAY2H,EAAO3H,SAAsB,OAAX2H,EAAtE,CAIA,IAAMW,EAAaX,EAAO3H,QACpBuI,EAAcX,EAAiB5H,QAC/B+H,EAAYE,EAEZO,EAASF,EAAMG,aAAeH,EAAMpD,MACpCwD,EAASJ,EAAMK,cAAgBL,EAAMnD,OACrCyD,EAAML,EAAOM,WAAW,MACxBC,EAAa3I,OAAO4I,iBAE1BR,EAAOrD,MAAQ6C,EAAK7C,MAAQ4D,EAAaN,EACzCD,EAAOpD,OAAS4C,EAAK5C,OAAS2D,EAAaJ,EAE3CE,EAAII,aAAaF,EAAY,EAAG,EAAGA,EAAY,EAAG,GAClDF,EAAIK,sBAAwB,OAE5BL,EAAIM,UACFZ,EACAP,EAAK9I,EAAIuJ,EACTT,EAAK7I,EAAIwJ,EACTX,EAAK7C,MAAQsD,EACbT,EAAK5C,OAASuD,EACd,EACA,EACAX,EAAK7C,MAAQsD,EACbT,EAAK5C,OAASuD,MAEf,CAACT,IAwBF,gCACE,wBACEpG,IAAK+F,EAEL7H,MAAO,CACLmF,MAAOiE,KAAKC,MAAL,iBAAWnB,QAAX,IAAWA,OAAX,EAAWA,EAAe/C,aAA1B,QAAmC,GAC1CC,OAAQgE,KAAKC,MAAL,iBAAWnB,QAAX,IAAWA,OAAX,EAAWA,EAAe9C,cAA1B,QAAoC,GAC5CkE,QAAS,UAIb,qBAAKtJ,MAAO,CAAEuJ,aAAc,OAAQC,WAAY,OAAQC,UAAW,SAAnE,SACE,eAACC,EAAA,EAAD,CACE3F,QAAQ,YACR4F,WAAU,OAACzB,QAAD,IAACA,OAAD,EAACA,EAAe/C,UAAS,OAAC+C,QAAD,IAACA,OAAD,EAACA,EAAe9C,QACnDa,QAAS,kBArCjB,SAA0BuC,EAAQR,GAC3BA,GAASQ,IAGd/K,GAAW,GACX+K,EAAOoB,QACL,SAACC,GACC,IAAMC,EAAa1J,OAAOsC,IAAIC,gBAAgBkH,GAG9ClC,EAASmC,GACTtC,EAASsC,GAETrM,GAAW,KAEb,YACA,IAsBMsM,CAAiBlC,EAAiB5H,QAASiI,IAJ/C,uBAOc,cAAC,IAAD,SAGhB,cAAC,IAAD,CACEpL,IAAK4K,EACL1H,MAAO,CAAEmF,OAAoB,OAAbsC,QAAa,IAAbA,OAAA,EAAAA,EAAetC,OAAQ,OAAQ,EAAcC,QAAqB,OAAbqC,QAAa,IAAbA,OAAA,EAAAA,EAAerC,SAAU,QAC9F4E,YAAY,YACZC,cAAe7B,EACfJ,KAAMA,EACNxF,SAAU,SAAC0H,GAAD,OAAOjC,EAAQiC,IACzBC,WAAY,SAACD,GAAD,OAAO/B,EAAiB+B,MAEtC,cAAC,EAAD,CAAS5M,UAAWE,Q,sDCvHb4M,EAA8C,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,gBAAiB9C,EAA0B,EAA1BA,SAAU+C,EAAgB,EAAhBA,UAAgB,EAC7EpH,YAAe,GAD8D,mBAC9FqH,EAD8F,KACxFC,EADwF,OAE3EtH,WAAeqE,GAF4D,mBAE9FgB,EAF8F,KAEvFf,EAFuF,KASrGtE,aAAgB,WACZsE,EAASD,KACV,CAACA,IAIJ,IAAMkD,EAAc,SAACC,IACC,IAAdA,GACAJ,EAAU/B,GAEdiC,GAAQ,IAGZ,OACI,gCAEI,cAACd,EAAA,EAAD,CAAQ3F,QAAQ,WAAWkC,QArBX,WACpBuB,EAASD,GACTiD,GAAQ,IAmBJ,SACI,cAAC,IAAD,MAGJ,eAACG,EAAA,EAAD,CAAQC,QAASH,EAAaF,KAAMA,EAApC,UACI,qBAAKrN,UAAU,mBAAf,SACI,cAAC2N,EAAA,EAAD,CAAY5E,QAASwE,EAArB,SACI,cAAC,IAAD,QAMR,cAAC,EAAD,CACIlD,SAAUgB,EACVf,SAAU,SAAC/E,GAAD,OAAO+E,EAAS/E,IAC1BgF,cAAe,CAAEtC,MAAOkF,EAAgBlF,MAAOC,OAAQ,UAG3D,qBAAKpF,MAAO,CAAEsJ,QAAS,OAAQwB,eAAgB,WAAYrB,UAAU,OAAOsB,cAAe,OAAQnK,aAAc,QAAjH,SAEI,eAAC8I,EAAA,EAAD,CACI3F,QAAQ,YACRkC,QAAS,kBAAMwE,GAAY,IAF/B,yBAGkB,cAAC,IAAD,gBC7ChCO,GAA+C,WAAO,IAAD,EACzBzN,mBAAS,IADgB,mBAChD0N,EADgD,KACvCC,EADuC,OAEnB3N,mBAAS,IAFU,mBAEhD4N,EAFgD,KAEpCC,EAFoC,OAGjB7N,mBAAS,IAHQ,mBAGhD8N,EAHgD,KAGnCC,EAHmC,OAIzB/N,oBAAS,GAJgB,mBAIhDC,EAJgD,KAIvCC,EAJuC,OAKjBF,mBAAS,IALQ,mBAKhDgO,EALgD,KAKnCC,EALmC,OAMzBjO,mBAAS,GANgB,mBAMhDkO,EANgD,KAMvCC,EANuC,OAOzBnO,mBAAS,GAPgB,mBAOhDoO,EAPgD,KAOvCC,EAPuC,OAQvBrO,mBAAS,KARc,mBAQhDmC,EARgD,KAQtCC,EARsC,OAS7BpC,mBAAS,WAToB,mBAShDI,EATgD,KASzCsH,EATyC,OAU3B1H,mBAAS,GAVkB,mBAUhDsO,EAVgD,KAUxCC,GAVwC,KAYvDpO,qBAAU,WACND,GAAW,GACXsO,MAAM,qCACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACF,IAAIE,EACJA,EAAQF,EAASG,KAAKD,MAAM/H,KAAI,SAACgI,GAC7B,MAAO,CACHC,UAAWD,EAAKC,UAChBjH,OAAQgH,EAAKhH,OACbjB,GAAInD,OAAOoL,EAAKjI,IAChBmI,KAAMF,EAAKE,KACXC,IAAKH,EAAKG,IACVpH,MAAOiH,EAAKjH,UAGpBqG,EAAeW,GACfK,YAAW,WACP/O,GAAW,KACZ,UAEZ,IAEHC,qBAAU,WACN,OAAO,kBAAM+O,oBAGjB/O,qBAAU,WACoB,GAAtB2N,EAAY5H,QAIZ6H,EAAeoB,KAGpB,CAACrB,IAEJ,IAAMsB,GAAe,SAAClK,GAClBA,EAAEmK,iBACFC,IAAWC,OAAOrO,SAASsO,eAAe,YAA4B,CAAEC,QAAS,IAC5EhB,MAAK,SAACiB,GACH,IAAMC,EAAOzO,SAAS0O,cAAc,KACpCD,EAAKE,SAAW,gBAChBF,EAAKG,KAAOJ,EACZC,EAAKI,YAkCjB,OACI,sBAAKtN,MAAO,CAAEwJ,WAAY,OAAQ+D,YAAa,QAA/C,UACI,uBACA,uBACA,cAAC,EAAD,CAAWzP,QAASyN,EAAaxN,QAlCzC,SAAmBwD,GACf+J,EAAe/J,EAAMgL,QAkCjB,uBACA,uBAAMrP,UAAU,YAAYsQ,SAAUb,GAAtC,UACI,uBAAOpK,KAAK,OAAOrE,YAAY,MAAMsF,MAAOyH,EAASzI,SAAU,SAAAC,GAAC,OAAIyI,EAAWzI,EAAEG,OAAOY,UACxF,uBAAOjB,KAAK,OAAOrE,YAAY,SAASsF,MAAO2H,EAAY3I,SAAU,SAAAC,GAAC,OAAI2I,EAAc3I,EAAEG,OAAOY,aAGrG,cAAC,EAAD,CAAiBP,UAAW,SAACR,GAAD,OArBpC,SAAiBA,GACb9C,EAAY8C,EAAEG,OAAOY,MAAMvC,YAoBYwM,CAAQhL,MAC3C,uBACA,sBAAKvF,UAAU,aAAf,UACI,cAAC,EAAD,CAAiBmN,gBAAiB,CAAElF,MAAO,MAAOC,OAAQ,QAAUmC,SAAU8D,EAAaf,UAAW,SAAChG,GAAD,OAAOgH,EAAehH,MAC5H,cAAC,EAAD,CAAcI,eArB1B,SAAqBjC,GACjBwC,EAASxC,MAqBD,cAAC,EAAD,CAAS4D,SA1CrB,SAAqB5D,GACjBqJ,GAAUrJ,SA2CN,uBACA,sBACIX,IAAK,SAAA4L,IA1CjB,SAAyBA,GAChBA,GACLC,aAAY,WACRjC,EAAWgC,EAAGE,wBAAwBzI,OACtCyG,EAAW8B,EAAGE,wBAAwBxI,OAAS,MAChD,KAqCkByI,CAAgBH,IAC7BxQ,UAAU,OAAOiH,GAAG,WAFxB,UAGI,cAAC,EAAD,CAAUrF,YAAaY,EAAUd,UAAWqM,EAASpM,cAAe,CAAEK,EAAGuM,EAAStM,EAAG,GAAKJ,aAAc4M,IACxG,cAAC,EAAD,CAAU7M,YAAaY,EAAUd,UAAWuM,EAAYtM,cAAe,CAAEK,EAAGuM,EAAStM,EAAGwM,GAAW5M,aAAc4M,IACjH,cAAC,EAAD,CAAW5E,KAAM/F,OAAOyK,GAAUzE,KAAM6E,EAAQ5E,SAAUtJ,IAC1D,qBAAKb,IAAqB,KAAhBuO,EAAqBqB,EAAOrB,EAAarO,IAAI,SACvD,cAAC,EAAD,CAAW+J,KAAM/F,OAAOyK,GAAUzE,KAAM6E,EAAQ5E,SAAUtJ,OAE9D,uBACA,sBAAKT,UAAU,YAAf,UACI,wBACA,cAACwM,EAAA,EAAD,CAAQ3F,QAAQ,YAAYkC,QAAS0G,GAArC,yBAEJ,qBAAKzP,UAAU,kBAAf,SACI,cAAC,EAAD,CAAaoF,QAhDzB,SAAwBwL,GACpBxC,EAAewC,QAiDX,cAAC,EAAD,CAASxQ,UAAWE,QC1HjBuQ,GAdkB,WAC/B,OACE,gCACE,cAAC,EAAD,IACA,qBAAK/N,MAAO,CAAEgO,SAAU,QAASC,OAAQ,UAAzC,SACE,cAAC,GAAD,MAEF,qBAAKjO,MAAO,CAACyJ,UAAU,QAAvB,SACA,cAAC,EAAD,UCLSyE,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFnQ,SAASsO,eAAe,SAM1BmB,O","file":"static/js/main.9abca776.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Trollface.c371feba.png\";","import React from 'react';\nimport problem from './../../assets/images/Trollface.png';\n\nexport type IHeaderProps = {\n\n}\n\nconst Header: React.FC<IHeaderProps> = () => {\n    return (\n        <header>\n            <img src={problem} alt=\"Problem?\" /> \n            <p>Meme Generator</p>\n            <small> © Beni</small>\n        </header>\n    );\n}\n\nexport { Header };","import React from 'react';\nimport './FooterStyle.css';\n\nexport type IFooterProps = {\n    \n}\n\nconst Footer: React.FC<IFooterProps> = () => {\n    return (\n        <div className=\"footerHolder\">\n            \n        </div>\n    );\n}\n\nexport { Footer };","import React, { useEffect, useState } from 'react';\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\nimport { css } from \"@emotion/react\";\nimport './LoadingStyle.css';\n\nexport type ILoadingProps = {\nisLoading:boolean;\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  box-shadow: rgb(255 255 255 / 20%) 0px 3px 29px 0px;\n`;\n\nconst Loading: React.FC<ILoadingProps> = ({isLoading }) => {\n\n    const [loading, setLoading] = useState(isLoading);\n\n    useEffect(() => {\n        setLoading(isLoading);\n    }, [isLoading]);\n\n    return (\n        <div className=\"sweet-loading\">\n            <PacmanLoader color={\"#FBD000\"}  loading={loading} css={override}  size={50} />\n        </div>\n    );\n}\n\nexport { Loading };","export default __webpack_public_path__ + \"static/media/rand.0757221b.jpeg\";","import React, { useEffect, useState } from 'react';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\nimport './SearchStyle.css'\n\nexport type ISearchbarProps = {\n    getData: any;\n    setData: (string) => void;\n}\n\nconst Searchbar: React.FC<ISearchbarProps> = ({ getData, setData }) => {\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        setItems(getData);\n    }, [getData]);\n\n\n    /*     const handleOnSearch = (string, results) => {\n            // onSearch will have as the first callback parameter\n            // the string searched and for the second the results.\n        } */\n\n    /* const handleOnHover = (result) => {\n        // the item hovered\n    } */\n\n    const handleOnSelect = (item) => {\n        // the item selected\n        setData(item);\n    }\n\n    /* const handleOnFocus = () => {\n        // ('Focused')\n    } */\n\n    const formatResult = (item) => {\n        return item;\n        // return (<p dangerouslySetInnerHTML={{__html: '<strong>'+item+'</strong>'}}></p>); //To format result as html\n    }\n\n\n    return (\n        <div >\n            {/* \n             onSearch={handleOnSearch}\n             onHover={handleOnHover}\n               onFocus={handleOnFocus}\n            */}\n            <ReactSearchAutocomplete\n                placeholder=\"Search\"\n                items={items}\n\n                onSelect={handleOnSelect}\n\n                autoFocus\n                formatResult={formatResult}\n                styling={\n                    {\n                        \"lineColor\": \"#48EDDD\",\n                        \"iconColor\": \"#48EDDD\",\n                        \"borderRadius\": \"4px\",\n                        \"boxShadow\": \"none\",\n                        \"zIndex\": \"4\",\n                        \"fontSize\": \"x-large\",\n                        \"fontFamily\": \"VT323, monospace\"\n                    }\n                }\n            />\n        </div>\n    );\n}\n\nexport { Searchbar };","import { useRef } from 'react';\n\nconst safeDocument: Document = document;\n\n/**\n * Usage:\n * const [blockScroll, allowScroll] = useScrollBlock();\n */\nconst useScrollBlock = (): [() => void, () => void] => {\n\tconst scrollBlocked = useRef(false);\n\tconst html = safeDocument.documentElement;\n\tconst { body } = safeDocument;\n\n\tconst blockScroll = (): void => {\n\t\tif (!body || !body.style || scrollBlocked.current)\n\t\t\treturn;\n\t\tif (document === undefined)\n\t\t\treturn;\n\n\t\tconst scrollBarWidth = window.innerWidth - html.clientWidth;\n\t\tconst bodyPaddingRight = parseInt(window.getComputedStyle(body).getPropertyValue('padding-right')) || 0;\n\n\t\t/**\n\t\t * 1. Fixes a bug in iOS and desktop Safari whereby setting\n\t\t *    `overflow: hidden` on the html/body does not prevent scrolling.\n\t\t * 2. Fixes a bug in desktop Safari where `overflowY` does not prevent\n\t\t *    scroll if an `overflow-x` style is also applied to the body.\n\t\t */\n\t\thtml.style.position = 'relative'; /* [1] */\n\t\thtml.style.overflow = 'hidden'; /* [2] */\n\t\tbody.style.position = 'relative'; /* [1] */\n\t\tbody.style.overflow = 'hidden'; /* [2] */\n\t\tbody.style.paddingRight = `${bodyPaddingRight + scrollBarWidth}px`;\n\n\t\tscrollBlocked.current = true;\n\t};\n\n\tconst allowScroll = (): void => {\n\t\tif (!body || !body.style || !scrollBlocked.current) return;\n\n\t\thtml.style.position = '';\n\t\thtml.style.overflow = '';\n\t\tbody.style.position = '';\n\t\tbody.style.overflow = '';\n\t\tbody.style.paddingRight = '';\n\n\t\tscrollBlocked.current = false;\n\t};\n\n\treturn [blockScroll, allowScroll];\n};\n\nexport { useScrollBlock }","import React, { useEffect, useRef, useState } from 'react';\nimport './TextMoveStyle.css';\nimport { useScrollBlock } from './../../services/BlockScroll/UseScrollBlock';\n\n\ninterface IPos {\n    x: number;\n    y: number;\n}\n\nexport type ITextMoveProps = {\n    inputText: string;\n    startPosition: IPos;\n    getFontSize: string;\n    parentHeight: number;\n}\n\n\nconst TextMove: React.FC<ITextMoveProps> = ({ inputText, startPosition, getFontSize, parentHeight }) => {\n\n    const [pressed, setPressed] = useState(false);\n    const [position, setPosition] = useState({ x: 0, y: 0 });\n    const inputTextHolderRef = useRef() as any;\n    const [text, setText] = useState(\"Write...\");\n    const [fontSize, setFontSize] = useState(\"2\");\n    const [blockScroll, allowScroll] = useScrollBlock();\n\n    useEffect(() => {\n\n        if (startPosition.x < 400 && startPosition.x !== 0) {\n            setFontSize((Number(getFontSize) / 1.5).toString());\n        }\n        else {\n            setFontSize(getFontSize);\n        }\n\n        let minus = 0;\n        let offset = 0;\n        if (startPosition.y > 0) {\n            offset = 50;\n            minus = inputTextHolderRef.current.clientHeight;\n        }\n        //set the position of the child in the center of the parent         \n        setPosition({\n            x: (startPosition.x - inputTextHolderRef.current.clientWidth) / 2,\n            y: (startPosition.y + offset) - minus\n        });\n\n    }, [startPosition]);\n\n    // Monitor changes to position state and update DOM and calculate the max positioning in the parent\n    useEffect(() => {\n        if (position.x <= 0) { position.x = 0 }\n        if (position.y <= -10) { position.y = -10 } //overlapping cause the div is bigger than the text in it\n\n        if ((startPosition.x - (inputTextHolderRef.current.clientWidth + position.x)) <= 0) { position.x = startPosition.x - inputTextHolderRef.current.clientWidth }\n        if ((position.y - parentHeight) >= 0) { position.y = parentHeight }\n\n        if (inputTextHolderRef.current) {\n            inputTextHolderRef.current.style.transform = `translate(${position.x}px, ${position.y}px)`\n        }\n\n    }, [position]);\n\n    useEffect(() => {\n        setText(inputText);\n    }, [inputText]);\n\n    let previousTouch;\n    const onMouseMove = (event) => {\n        if (pressed) {\n\n            switch (event.movementX !== undefined) {\n                case true:\n\n                    setPosition({\n                        x: position.x + event.movementX,\n                        y: position.y + event.movementY\n                    })\n                    break;\n                case false:\n                    var touch = event.touches[0];\n\n                    if (previousTouch) {\n                        event.movementX = touch.pageX - previousTouch.pageX;\n                        event.movementY = touch.pageY - previousTouch.pageY;\n\n                        setPosition({\n                            x: position.x + event.movementX,\n                            y: position.y + event.movementY\n                        })\n                    }\n\n                    previousTouch = touch;\n                    break;\n            }\n        }\n    }\n\n    return (\n        <div\n            className=\"inputTextHolder\"\n            ref={inputTextHolderRef}\n            onTouchStart={() => { setPressed(true); blockScroll(); }}\n            onTouchEnd={() => { setPressed(false); allowScroll(); }}\n            onTouchMove={onMouseMove}\n\n            onMouseMove={onMouseMove}\n            onMouseDown={() => setPressed(true)}\n            onMouseUp={() => setPressed(false)}\n            onMouseLeave={() => setPressed(false)}\n        >\n\n            <h2 className=\"inputText\" style={{ fontSize: fontSize + \"em\" }}>{text}</h2>\n        </div>\n    );\n}\n\nexport { TextMove };","import React from 'react';\nimport './DragDropStyle.css';\n\nexport type IDragDropImgProps = {\n    loadImg: (e:any) => void;\n}\n\nconst DragDropImg: React.FC<IDragDropImgProps> = ({loadImg}) => {\n\n\n    function handleInputImg(e: any) {\n        loadImg(URL.createObjectURL(e.target.files[0]));\n    }\n\n    return (\n        <div className=\"inputImgHolder\">\n            <label className=\"custom-file-upload\">\n            <input   type=\"file\" onChange={handleInputImg} />\n            <i className=\"inputImg\" ></i>\n            <i className=\"inputText\">Image Upload</i> \n            </label>\n        </div> \n    );\n}\n\nexport { DragDropImg };","import { FormControl, InputLabel, MenuItem, Select } from '@mui/material';\nimport React, { useEffect } from 'react';\nimport './SelectorStyle.css';\n\nexport type IContent = {\n    value: number;\n    content: string;\n}\n\nexport type ISelectorProps = {\n    getLabel: string;\n    getContent: IContent[];\n    setSelect: (e: IContent) => void;\n}\n\nconst Selector: React.FC<ISelectorProps> = ({ getLabel, getContent, setSelect }) => {\n    const [label, setLabel] = React.useState('');\n    const [content, setContent] = React.useState([{}] as IContent[]);\n\n    const handleChange = (e: any) => {\n        setLabel(e.target.value);\n        setSelect(e);\n    };\n\n    useEffect(() => {\n        setContent(getContent);\n        if (content[0].value !== undefined && label.length === 0) {\n            setLabel(content[1].value.toString());\n            const tt = { target: content[1] }\n            handleChange(tt)\n        }\n    }, [getContent]);\n\n    const styles = { fontFamily: \"VT323, monospace\" }\n\n    return (\n        <div className=\"SelectHolder\">\n\n            <FormControl fullWidth variant=\"outlined\">\n                <InputLabel style={styles} >{getLabel}</InputLabel>\n                <Select\n                    style={styles}\n                    labelId=\"selector\"\n                    id=\"selector\"\n                    value={label}\n                    label={getLabel}\n                    onChange={handleChange}\n                >\n                    {content.map((men, i) =>\n                        <MenuItem style={styles} key={i} value={men.value}>{men.content}</MenuItem>\n                    )}\n\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport { Selector };\n\n\n","import React from 'react';\nimport { IContent, Selector } from './Selector';\n\nexport type ISelectorWrapperProps = {\n    setSelect:(e:IContent)=>void;\n}\n\n\nconst SelectorWrapper: React.FC<ISelectorWrapperProps> = ({setSelect}) => {\n    const cont: IContent[] = [\n\n        { value: 1, content: \"small\" },\n        { value: 2, content: \"medium\" },\n        { value: 3, content: \"large\" }\n    ];\n\n\n    \n    return (\n        <div>\n            <Selector setSelect={setSelect} getLabel={\"Font Size\"} getContent={cont} />\n        </div>\n    );\n}\n\nexport { SelectorWrapper };","import React, { useState } from 'react';\nimport './ColorPaletteStyle.css';\nimport reactCSS from 'reactcss';\nimport { SketchPicker } from 'react-color';\n\nexport type IColorPaletteProps = {\n    changeColorHex: (e: string) => void;\n}\n\nconst ColorPalette: React.FC<IColorPaletteProps> = ({changeColorHex}) => {\n    const [displayColorPicker, setDisplayColorPicker] = useState(false);\n\n    const [color, setColor] = useState({\n        r: '0',\n        g: '0',\n        b: '0',\n        a: '1',\n    });\n\n    const handleClick = () => {\n        setDisplayColorPicker(!displayColorPicker);\n    };\n\n    const handleClose = () => {\n        setDisplayColorPicker(false);\n    };\n\n    const handleChange = (color) => {\n        setColor(color.rgb);\n        changeColorHex(color.hex);\n    };\n\n\n    const styles = reactCSS({\n        'default': {\n            color: {\n                width: '36px',\n                height: '14px',\n                background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\n                padding:'14px'\n            },\n            swatch: {\n                padding: '5px',\n                background: '#fff',\n                borderRadius: '1px',\n                cursor: 'pointer',\n            },\n            popover: {\n                position: 'absolute',\n                zIndex: '2',\n            },\n            cover: {\n                position: 'fixed',\n                top: '0px',\n                right: '0px',\n                bottom: '0px',\n                left: '0px',\n            },\n        },\n    });\n\n\n    return (\n        <div>\n            <div style={styles.swatch} onClick={handleClick}>\n                <div style={styles.color} />\n            </div>\n            {displayColorPicker ? <div style={styles.popover}>\n                <div style={styles.cover} onClick={handleClose} />\n                <SketchPicker color={color} onChange={handleChange} />\n            </div> : null}\n        </div>\n    );\n}\n\nexport { ColorPalette };","import React, { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport { Slider } from '@mui/material';\nimport './SliderC.style.css';\n\nexport interface IStyle {\n    maxWidth: string;\n    marginRight:string;\n}\n\nexport type ISliderCProps = {\n    getValue: (v: number) => void;\n}\n\nconst SliderC: React.FC<ISliderCProps> = ({ getValue }) => {\n\n    const change = (e) => {\n        if (e.target.value === null) {\n            return;\n        }\n        getValue(e.target.value);\n    }\n\n\n    return (\n        <Box width={600} className=\"box-wrapper\">\n            <Slider\n                size=\"small\"\n                min={0}\n                max={200}\n                defaultValue={0}\n                onChange={(v) => change(v)}\n                aria-label=\"Small\"\n                valueLabelDisplay=\"auto\"\n            />\n\n        </Box>\n    );\n}\n\nexport { SliderC };","import React, { useEffect, useState } from 'react';\nimport './UpDownFix.style.css';\n\n/**\n * generate a div with variable x and y size\n */\n\nexport type IUpDownFixProps = {\n    getX: number;\n    getY: number;\n    getColor: string;\n}\n\nconst UpDownFix: React.FC<IUpDownFixProps> = ({ getX, getY, getColor }) => {\n    const [y, setY] = useState(20);\n    const [x, setX] = useState(20);\n    const [color, setColor] = useState(\"#000000\");\n\n    useEffect(() => {\n        setX(getX);\n    }, [getX]);\n\n    useEffect(() => {\n       setY(getY);\n    }, [getY]);\n\n    useEffect(() => {\n        setColor(getColor);\n    }, [getColor]);\n\n    const boxStyle = {\n        width: `${x}px`,\n        height: `${y}px`,\n        backgroundColor: color\n    };\n\n    return (\n        <div\n            className=\"UpDownFix-wrapper\"\n            style={boxStyle}\n        >\n        </div>\n    );\n}\n\nexport { UpDownFix };\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport CropIcon from '@mui/icons-material/Crop';\nimport { Button } from '@mui/material';\nimport { Loading } from '../Loading/Loading';\n\nexport interface IParentSize {\n  width: string;\n  height: string;\n}\n\nexport type ICropImageProps = {\n  getImage: any;\n  setImage: (e: any) => void;\n  getParentSize: IParentSize;\n}\n\nconst CropImage: React.FC<ICropImageProps> = ({ getImage, setImage, getParentSize }) => {\n  const [upImg, setUpImg] = useState(null as any);\n  const imgRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n  const [crop, setCrop] = useState({ unit: '%', width: 30, aspect: 16 / 9 } as any);\n  const [completedCrop, setCompletedCrop] = useState(null as any);\n  const [loading, setLoading] = useState(false);\n\n  const onSelectFile = (e: any) => {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader: any = new FileReader();\n      reader.addEventListener('load', () => setUpImg(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n\n  useEffect(() => {\n    if (getImage.length != 0) {\n      setUpImg(getImage);\n    }\n  }, [getImage]);\n\n\n  const onLoad = useCallback((img) => {\n    imgRef.current = img;\n  }, []);\n\n  useEffect(() => {\n    imgRef.current = getImage;\n    return;\n  }, [getImage]);\n\n  useEffect(() => {\n    if (!completedCrop || !previewCanvasRef.current || !imgRef.current || imgRef === null) {\n      return;\n    }\n\n    const image: any = imgRef.current;\n    const canvas: any = previewCanvasRef.current;\n    const crop: any = completedCrop;\n\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    const ctx = canvas.getContext('2d');\n    const pixelRatio = window.devicePixelRatio;\n\n    canvas.width = crop.width * pixelRatio * scaleX;\n    canvas.height = crop.height * pixelRatio * scaleY;\n\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = 'high';\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width * scaleX,\n      crop.height * scaleY\n    );\n  }, [completedCrop]);\n\n  function generateDownload(canvas, crop) {\n    if (!crop || !canvas) {\n      return;\n    }\n    setLoading(true);\n    canvas.toBlob(\n      (blob) => {\n        const previewUrl = window.URL.createObjectURL(blob);\n\n        //set up  crossorigin='anonymous' in image because of CORS!!!\n        setUpImg(previewUrl);\n        setImage(previewUrl);\n\n        setLoading(false);\n      },\n      'image/png',\n      1\n    );\n  }\n\n\n  return (\n    <div>\n      <canvas\n        ref={previewCanvasRef}\n        // Rounding is important so the canvas width and height matches/is a multiple for sharpness.\n        style={{\n          width: Math.round(completedCrop?.width ?? 0),\n          height: Math.round(completedCrop?.height ?? 0),\n          display: 'none'\n        }}\n      />\n\n      <div style={{ marginBottom: \"20px\", marginLeft: \"20px\", marginTop: '-20px' }}>\n        <Button\n          variant='contained'\n          disabled={!completedCrop?.width || !completedCrop?.height}\n          onClick={() =>\n            generateDownload(previewCanvasRef.current, completedCrop)\n          }\n        >\n          Crop &nbsp; <CropIcon />\n        </Button>\n      </div>\n      <ReactCrop\n        src={upImg}\n        style={{ width: getParentSize?.width + \"px\" || \"680\" + \"px\", height: getParentSize?.height || \"auto\" }}\n        crossorigin='anonymous'\n        onImageLoaded={onLoad}\n        crop={crop}\n        onChange={(c) => setCrop(c)}\n        onComplete={(c) => setCompletedCrop(c)}\n      />\n      <Loading isLoading={loading} />\n\n    </div>\n  );\n}\n\nexport { CropImage };","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Dialog from \"@mui/material/Dialog\";\nimport { CropImage, IParentSize } from \"../CropImage/CropImage\";\nimport { IconButton } from \"@mui/material\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport './DialogImageCrop.style.css';\nimport CropIcon from '@mui/icons-material/Crop';\nimport DoneIcon from '@mui/icons-material/Done';\n\nexport type IDialogImageCrop = {\n    getImage: string;\n    sendImage: (i: string) => void\n    parentImageSize: IParentSize;\n}\n\nexport const DialogImageCrop: React.FC<IDialogImageCrop> = ({ parentImageSize, getImage, sendImage }) => {\n    const [open, setOpen] = React.useState(false);\n    const [image, setImage] = React.useState(getImage);\n\n    const handleClickOpen = () => {\n        setImage(getImage)\n        setOpen(true);\n    };\n\n    React.useEffect(() => {\n        setImage(getImage);\n    }, [getImage]);\n\n\n\n    const handleClose = (saveClose) => {\n        if (saveClose === true) {\n            sendImage(image);\n        }\n        setOpen(false);\n    };\n\n    return (\n        <div>\n\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\n                <CropIcon />\n            </Button>\n\n            <Dialog onClose={handleClose} open={open}>\n                <div className=\"closeIconWrapper\">\n                    <IconButton onClick={handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n\n                {/*  <DialogTitle>Set backup account</DialogTitle> */}\n\n                <CropImage\n                    getImage={image}\n                    setImage={(e) => setImage(e)}\n                    getParentSize={{ width: parentImageSize.width, height: 'auto' }} />\n\n\n                <div style={{ display: \"flex\", justifyContent: 'flex-end', marginTop:\"30px\",paddingBottom: '30px', paddingRight: '30px' }}>\n\n                    <Button\n                        variant='contained'\n                        onClick={() => handleClose(true)}>\n                        Submit &nbsp; <DoneIcon />\n                    </Button>\n                </div>\n\n            </Dialog>\n\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport './../../Styles/globstyle.css';\nimport domtoimage from 'dom-to-image';\nimport { Loading } from '../../components/Loading/Loading';\nimport logo from './../../assets/images/rand.jpeg';\nimport { Searchbar } from '../../components/SearchBar/Searchbar';\nimport { Button, Dialog } from '@mui/material';\nimport { TextMove } from '../../components/TextMove/TextMove';\nimport { DragDropImg } from '../../components/DragDropImg/DragDropImg';\nimport { SelectorWrapper } from '../../components/Selector/SelectorWrapper';\nimport { ColorPalette } from '../../components/ColorPalette/ColorPalette';\nimport { CropImage } from '../../components/CropImage/CropImage';\nimport { SliderC } from '../../components/SliderC/SliderC';\nimport { UpDownFix } from '../../components/UpDownFix/UpDownFix';\nimport { DialogImageCrop } from '../../components/DialogImageCrop/DialogImageCrop';\n\nexport type IMemeGeneratorProps = {\n\n}\n\n\nconst MemeGenerator: React.FC<IMemeGeneratorProps> = () => {\n    const [topText, setTopText] = useState(\"\");\n    const [bottomText, setBottomText] = useState(\"\");\n    const [randomImage, setRandomImage] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [allMemeImgs, setAllMemeImgs] = useState([]);\n    const [parentX, setparentX] = useState(0);\n    const [parentY, setparentY] = useState(0);\n    const [fontSize, setFontSize] = useState(\"1\");\n    const [color, setColor] = useState(\"#000000\");\n    const [upDown, setUpDown] = useState(0);\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(response => response.json())\n            .then(response => {\n                let memes = [];\n                memes = response.data.memes.map((data: any) => {\n                    return {\n                        box_count: data.box_count,\n                        height: data.height,\n                        id: Number(data.id),\n                        name: data.name,\n                        url: data.url,\n                        width: data.width\n                    }\n                })\n                setAllMemeImgs(memes);\n                setTimeout(() => {\n                    setLoading(false);\n                }, 1000);\n            })\n    }, []);\n\n    useEffect(() => {\n        return () => clearInterval();\n    });\n\n    useEffect(() => {\n        if (randomImage.length != 0) {\n            // console.log(randomImage);\n        } else {\n            // console.log(logo);\n            setRandomImage(logo)\n        }\n\n    }, [randomImage]);\n\n    const handleSubmit = (e: any) => {\n        e.preventDefault();\n        domtoimage.toJpeg(document.getElementById('memeForm') as HTMLElement, { quality: 1 })\n            .then((dataUrl) => {\n                const link = document.createElement('a');\n                link.download = 'beniMeme.jpeg';\n                link.href = dataUrl;\n                link.click();\n            });\n    }\n\n    function getSearch(event) {\n        setRandomImage(event.url);\n    }\n\n    function sliderMoved(e: number) {\n        setUpDown(e);\n    }\n\n    function checkParentSize(el) {\n        if (!el) return;\n        setInterval(() => {\n            setparentX(el.getBoundingClientRect().width);\n            setparentY(el.getBoundingClientRect().height - 50);\n        }, 400);\n    }\n\n    function handleInputImg(getImg: string) {\n        setRandomImage(getImg);\n    }\n\n    function setSize(e: any) {\n        setFontSize(e.target.value.toString());\n    }\n\n    function changeColor(e: string) {\n        setColor(e);\n    }\n\n\n\n    return (\n        <div style={{ marginLeft: \"10px\", marginRight: \"10px\" }}>\n            <br />\n            <br />\n            <Searchbar getData={allMemeImgs} setData={getSearch} />\n            <br />\n            <form className=\"meme-form\" onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder=\"Top\" value={topText} onChange={e => setTopText(e.target.value)} />\n                <input type=\"text\" placeholder=\"Bottom\" value={bottomText} onChange={e => setBottomText(e.target.value)} />\n                {/*  <Button variant=\"contained\" type=\"submit\">Download</Button> */}\n            </form>\n            <SelectorWrapper setSelect={(e) => setSize(e)} />\n            <br />\n            <div className=\"work-items\">\n                <DialogImageCrop parentImageSize={{ width: \"680\", height: 'auto' }} getImage={randomImage} sendImage={(i) => setRandomImage(i)} />\n                <ColorPalette changeColorHex={changeColor} />\n                <SliderC getValue={sliderMoved}  />\n            </div>\n            <br />\n            <div\n                ref={el => { checkParentSize(el) }}\n                className=\"meme\" id=\"memeForm\" >\n                <TextMove getFontSize={fontSize} inputText={topText} startPosition={{ x: parentX, y: 0 }} parentHeight={parentY} />\n                <TextMove getFontSize={fontSize} inputText={bottomText} startPosition={{ x: parentX, y: parentY }} parentHeight={parentY} />\n                <UpDownFix getX={Number(parentX)} getY={upDown} getColor={color} />\n                <img src={randomImage === \"\" ? logo : randomImage} alt=\"Meme\" />\n                <UpDownFix getX={Number(parentX)} getY={upDown} getColor={color} />\n            </div>\n            <br />\n            <div className=\"meme-form\">\n                <div></div>\n                <Button variant=\"contained\" onClick={handleSubmit}>Download</Button>\n            </div>\n            <div className=\"dragDropWrapper\" >\n                <DragDropImg loadImg={handleInputImg} />\n            </div>\n            <Loading isLoading={loading} />\n        </div>\n    );\n}\n\nexport { MemeGenerator };","\nimport React from 'react';\nimport './App.css';\nimport { Header } from './components/Header/Header';\nimport { Footer } from './components/Footer/Footer';\nimport { MemeGenerator } from './sites/MemeGenerator/MemeGenerator';\n\ntype IAppProps = {\n\n}\n\nconst App: React.FC<IAppProps> = () => {\n  return (\n    <div>\n      <Header />\n      <div style={{ maxWidth: '700px', margin: '0 auto' }}>\n        <MemeGenerator />\n      </div>\n      <div style={{marginTop:\"30px\"}}>\n      <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler):void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA"],"sourceRoot":""}